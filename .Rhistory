library(reshape2)
}
if(!require(reshape)){
install.packages("reshape")
library(reshape)
}
if(!require(reshape2)){
install.packages("reshape2")
library(reshape2)
}
eis <- eisodima[eisodima$SUBJECT == "GROSSADJ", c(1,6,7)]
eis_wide <- dcast(eis, TIME ~ LOCATION, value.var="Value")
knitr::kable(eis_wide) %>%
kable_styling("striped", full_width = F) %>%
scroll_box(width = "100%", height = "200px")
dentrogramma(eis_wide[,-1])
eis_wide[,-1]
dentrogramma(as.data.frame(eis_wide[,-1]))
eis12_20 <- eis_wide[43:51,-1]
dentrogramma(eis12_20)
eis2021 <- eis_wide[52,-1]
dentrogramma(eis2021)
USArrests
?USArrests
if(!require(dendextend)){
install.packages("dendextend")
library(dendextend)
}
if(!require(circlize)){
install.packages("circlize")
library(circlize)
}
if(!require(dendextend)){
install.packages("dendextend")
library(dendextend)
}
if(!require(circlize)){
install.packages("circlize")
library(circlize)
}
?hclust
# Distance matrix
d <- dist(USArrests)
# Hierarchical clustering dendrogram
hc <- as.dendrogram(hclust(d))
# Circular dendrogram
circlize_dendrogram(hc,
labels_track_height = NA,
dend_track_height = 0.4)
# Distance matrix
d <- dist(USArrests)
# Hierarchical clustering dendrogram
hc <- as.dendrogram(hclust(d))
# Circular dendrogram
circlize_dendrogram(hc,
labels_track_height = NA,
dend_track_height = 0.2)
# Με χρώματα
# Colors
hc <- hc %>%
color_branches(k = 3) %>%
color_labels(k = 3)
# Fan tree plot with colored labels
circlize_dendrogram(hc,
labels_track_height = NA,
dend_track_height = 0.4)
# Distance matrix
d <- dist(USArrests)
# Hierarchical clustering dendrogram
hc <- as.dendrogram(hclust(d))
# Circular dendrogram
circlize_dendrogram(hc,
labels_track_height = NA,
dend_track_height = 0.2)
# Με χρώματα
# Colors
hc <- hc %>%
color_branches(k = 3) %>%
color_labels(k = 3)
# Fan tree plot with colored labels
circlize_dendrogram(hc,
labels_track_height = NA,
dend_track_height = 0.2)
# Distance matrix
d <- dist(USArrests)
# Hierarchical clustering dendrogram
hc <- as.dendrogram(hclust(d))
# Circular dendrogram
circlize_dendrogram(hc,
labels_track_height = NA,
dend_track_height = 0.2)
# Με χρώματα
# Colors
hc <- hc %>%
color_branches(k = 3) %>%
color_labels(k = 3)
# Fan tree plot with colored labels
circlize_dendrogram(hc,
labels_track_height = NA,
dend_track_height = 0.2)
USArrests
kykliko_dentrogrammaBW <- function(stiles,mikos){
stiles <- stiles %>% select_if(~ !any(is.na(.)))
stiles_m <- as.matrix(stiles)
stiles_m.t <- t(stiles_m)
dist.stiles_m <- dist(stiles_m.t, diag = TRUE, upper = TRUE)
dist.stiles_m <- as.matrix(dist.stiles_m)
hc <- as.dendrogram(hclust(dist.stiles_m))
circlize_dendrogram(hc,
labels_track_height = NA,
dend_track_height = mikos)
}
kykliko_dentrogrammaBW(eis12_20,0.2)
kykliko_dentrogrammaBW(eis12_20,0.4)
kykliko_dentrogrammaBW(eis2021,0.4)
kykliko_dentrogrammaBW <- function(stiles,mikos){
stiles <- stiles %>% select_if(~ !any(is.na(.)))
stiles_m <- as.matrix(stiles)
stiles_m.t <- t(stiles_m)
dist.stiles_m <- dist(stiles_m.t, diag = TRUE, upper = TRUE)
hc <- as.dendrogram(hclust(dist.stiles_m))
circlize_dendrogram(hc,
labels_track_height = NA,
dend_track_height = mikos)
}
kykliko_dentrogrammaBW(eis2021,0.4)
kykliko_dentrogrammaCOL(eis2021,0.2,3)
kykliko_dentrogrammaCOL <- function(stiles,mikos,omades){
stiles <- stiles %>% select_if(~ !any(is.na(.)))
stiles_m <- as.matrix(stiles)
stiles_m.t <- t(stiles_m)
dist.stiles_m <- dist(stiles_m.t, diag = TRUE, upper = TRUE)
hc <- as.dendrogram(hclust(dist.stiles_m))
hc <- hc %>%
color_branches(k = omades) %>%
color_labels(k = omades)
# Fan tree plot with colored labels
circlize_dendrogram(hc,
labels_track_height = NA,
dend_track_height = mikos)
}
kykliko_dentrogrammaCOL(eis2021,0.2,3)
kykliko_dentrogrammaCOL(eis2021,0.2,5)
kykliko_dentrogrammaCOL(eis2021,0.1,5)
kykliko_dentrogrammaCOL(eis2021,0.5,5)
kykliko_dentrogrammaCOL(eis2021,0.9,5)
kykliko_dentrogrammaCOL(eis2021,0.7,5)
kykliko_dentrogrammaBW(eis2021,0.4)
kykliko_dentrogrammaBW(eis2021, mikos = 0.4)
kykliko_dentrogrammaBW(eis2021,0.7)
kykliko_dentrogrammaBW(eis2021,0.8)
kykliko_dentrogrammaBW(eis2021,0.7)
kykliko_dentrogrammaBW(eis2021, mikos = 0.3)
kykliko_dentrogrammaBW(eis2021, mikos = 0.2)
kykliko_dentrogrammaBW(eis2021,0.7)
kykliko_dentrogrammaBW(eis2021, mikos = 0.7)
kykliko_dentrogrammaCOL(eis2021, mikos = 0.7, omades = 10)
t <- 1:1000
y <- 5*(sin(2*pi*t/(4/3)))+2*(cos(2*pi*t/(4/3)))-6*(sin(2*pi*t/(4)))+7*(cos(2*pi*t/(4)))-9*(sin(2*pi*t/(2)))+1*(cos(2*pi*t/(2)))
lm(y ~ I(sin(2*pi*t/(4/3)))+I(cos(2*pi*t/(4/3)))+I(sin(2*pi*t/(4)))+I(cos(2*pi*t/(4)))+I(sin(2*pi*t/(2)))+I(cos(2*pi*t/(2)))
lm(y ~ I(sin(2*pi*t/(4/3)))+I(cos(2*pi*t/(4/3)))+I(sin(2*pi*t/(4)))+I(cos(2*pi*t/(4)))+I(sin(2*pi*t/(2)))+I(cos(2*pi*t/(2))))
y <- 5*(sin(2*pi*t/(4/3)))+2*(cos(2*pi*t/(4/3)))-6*(sin(2*pi*t/(4)))+7*(cos(2*pi*t/(4)))-9*(sin(2*pi*t/(2)))+1*(cos(2*pi*t/(2)))
lm(y ~ I(sin(2*pi*t/(4/3)))+I(cos(2*pi*t/(4/3)))+I(sin(2*pi*t/(4)))+I(cos(2*pi*t/(4)))+I(sin(2*pi*t/(2)))+I(cos(2*pi*t/(2))))
t <- (1:1000)/0.1
y <- 5*(sin(2*pi*t/(4/3)))+2*(cos(2*pi*t/(4/3)))-6*(sin(2*pi*t/(4)))+7*(cos(2*pi*t/(4)))-9*(sin(2*pi*t/(2)))+1*(cos(2*pi*t/(2)))
lm(y ~ I(sin(2*pi*t/(4/3)))+I(cos(2*pi*t/(4/3)))+I(sin(2*pi*t/(4)))+I(cos(2*pi*t/(4)))+I(sin(2*pi*t/(2)))+I(cos(2*pi*t/(2))))
t <- (1:10000)/0.01
y <- 5*(sin(2*pi*t/(4/3)))+2*(cos(2*pi*t/(4/3)))-6*(sin(2*pi*t/(4)))+7*(cos(2*pi*t/(4)))-9*(sin(2*pi*t/(2)))+1*(cos(2*pi*t/(2)))
lm(y ~ I(sin(2*pi*t/(4/3)))+I(cos(2*pi*t/(4/3)))+I(sin(2*pi*t/(4)))+I(cos(2*pi*t/(4)))+I(sin(2*pi*t/(2)))+I(cos(2*pi*t/(2))))
t <- (1:1000000)/0.01
y <- 5*(sin(2*pi*t/(4/3)))+2*(cos(2*pi*t/(4/3)))-6*(sin(2*pi*t/(4)))+7*(cos(2*pi*t/(4)))-9*(sin(2*pi*t/(2)))+1*(cos(2*pi*t/(2)))
lm(y ~ I(sin(2*pi*t/(4/3)))+I(cos(2*pi*t/(4/3)))+I(sin(2*pi*t/(4)))+I(cos(2*pi*t/(4)))+I(sin(2*pi*t/(2)))+I(cos(2*pi*t/(2))))
t <- (1:1000000)/0.01
y <- 5*sin(2*pi*t/(4/3))+2*cos(2*pi*t/(4/3))-6*sin(2*pi*t/(4))+7*cos(2*pi*t/(4))-9*sin(2*pi*t/(2))+1*cos(2*pi*t/(2))
lm(y ~ I(sin(2*pi*t/(4/3)))+I(cos(2*pi*t/(4/3)))+I(sin(2*pi*t/(4)))+I(cos(2*pi*t/(4)))+I(sin(2*pi*t/(2)))+I(cos(2*pi*t/(2))))
plot(t,y)
plot(t,y)
tPoints <- (0:1000000)/0.01
tPoints <- (0:1000000)/0.01
n <- length(tPoints)
tPoints <- (0:1000000)/0.01
n <- length(tPoints)
y <- 1:n
for (t in tPoints) {
y[t] <- 5*sin(2*pi*t/(4/3))+2*cos(2*pi*t/(4/3))-6*sin(2*pi*t/(4))+7*cos(2*pi*t/(4))-9*sin(2*pi*t/(2))+1*cos(2*pi*t/(2))
}
tPoints <- (0:2000)/0.01
n <- length(tPoints)
y <- 1:n
for (t in tPoints) {
y[t] <- 5*sin(2*pi*t/(4/3))+2*cos(2*pi*t/(4/3))-6*sin(2*pi*t/(4))+7*cos(2*pi*t/(4))-9*sin(2*pi*t/(2))+1*cos(2*pi*t/(2))
}
lm(y ~ I(sin(2*pi*tPoints/(4/3)))+I(cos(2*pi*tPoints/(4/3)))+I(sin(2*pi*tPoints/(4)))+I(cos(2*pi*tPoints/(4)))+I(sin(2*pi*tPoints/(2)))+I(cos(2*pi*tPoints/(2))))
t
tPoints <- (1:2000)/0.01
n <- length(tPoints)
tPoints <- (1:2000)/0.01
n <- length(tPoints)
y <- 1:n
for (t in tPoints) {
y[t] <- 5*sin(2*pi*t/(4/3))+2*cos(2*pi*t/(4/3))-6*sin(2*pi*t/(4))+7*cos(2*pi*t/(4))-9*sin(2*pi*t/(2))+1*cos(2*pi*t/(2))
}
lm(y ~ I(sin(2*pi*tPoints/(4/3)))+I(cos(2*pi*tPoints/(4/3)))+I(sin(2*pi*tPoints/(4)))+I(cos(2*pi*tPoints/(4)))+I(sin(2*pi*tPoints/(2)))+I(cos(2*pi*tPoints/(2))))
y <- 1:n
for (t in 1:n) {
y[t] <- 5*sin(2*pi*t/(4/3))+2*cos(2*pi*t/(4/3))-6*sin(2*pi*t/(4))+7*cos(2*pi*t/(4))-9*sin(2*pi*t/(2))+1*cos(2*pi*t/(2))
}
lm(y ~ I(sin(2*pi*tPoints/(4/3)))+I(cos(2*pi*tPoints/(4/3)))+I(sin(2*pi*tPoints/(4)))+I(cos(2*pi*tPoints/(4)))+I(sin(2*pi*tPoints/(2)))+I(cos(2*pi*tPoints/(2))))
plot(t,y)
plot(tPoints,y)
tPoints <- (1:2000)/0.01
n <- length(tPoints)
y <- 1:n
for (t in 1:n) {
y[t] <- 5*sin(2*pi*t/(4/3))+2*cos(2*pi*t/(4/3))-6*sin(2*pi*t/(4))+7*cos(2*pi*t/(4))-9*sin(2*pi*t/(2))+1*cos(2*pi*t/(2))
}
plot(tPoints,y)
tPoints <- (1:2000)/0.01
n <- 2000
y <- 1:n
for (t in 1:n) {
y[t] <- 5*sin(2*pi*t/(4/3))+2*cos(2*pi*t/(4/3))-6*sin(2*pi*t/(4))+7*cos(2*pi*t/(4))-9*sin(2*pi*t/(2))+1*cos(2*pi*t/(2))
}
plot(tPoints,y)
lm(y ~ I(sin(2*pi*tPoints/(4/3)))+I(cos(2*pi*tPoints/(4/3)))+I(sin(2*pi*tPoints/(4)))+I(cos(2*pi*tPoints/(4)))+I(sin(2*pi*tPoints/(2)))+I(cos(2*pi*tPoints/(2))))
y <- 1:n
n <- 2000
y <- 1:n
tPoints <- 1:n
h <- 0.01
for (t in 1:n) {
tPoints[t] <- h*t
y[t] <- 5*sin(2*pi*t*h/(4/3))+2*cos(2*pi*t*h/(4/3))-6*sin(2*pi*t*h/(4))+7*cos(2*pi*t*h/(4))-9*sin(2*pi*t*h/(2))+1*cos(2*pi*t*h/(2))
}
plot(tPoints,y)
lm(y ~ I(sin(2*pi*tPoints/(4/3)))+I(cos(2*pi*tPoints/(4/3)))+I(sin(2*pi*tPoints/(4)))+I(cos(2*pi*tPoints/(4)))+I(sin(2*pi*tPoints/(2)))+I(cos(2*pi*tPoints/(2))))
# cs is the vector of complex points to convert
convert.fft <- function(cs, sample.rate=1) {
cs <- cs / length(cs) # normalize
distance.center <- function(c)signif( Mod(c),        4)
angle           <- function(c)signif( 180*Arg(c)/pi, 3)
df <- data.frame(cycle    = 0:(length(cs)-1),
freq     = 0:(length(cs)-1) * sample.rate / length(cs),
strength = sapply(cs, distance.center),
delay    = sapply(cs, angle))
df
}
convert.fft(fft(1:4))
convert.fft(fft(y))
convert.fft(fft(y))[250:300]
convert.fft(fft(y))[250:300,2]
convert.fft(fft(y)[250:300,2]
# returns the x.n time series for a given time sequence (ts) and
# a vector with the amount of frequencies k in the signal (X.k)
get.trajectory <- function(X.k,ts,acq.freq) {
seiraFourier <- function(dedomena, listPeriod){
t <- 1:length(dedomena)
n <- length(listPeriod)
T <- listPeriod[1]
seira <- paste(c("I(sin(2*pi*t/",T,"))+I(cos(2*pi*t/",T,"))"), collapse="")
if (n>1) {
for (i in 2:n) {
T <- listPeriod[i]
orosN <- paste(c("I(sin(2*pi*t/",T,"))+I(cos(2*pi*t/",T,"))"), collapse="")
seira <- paste(c(seira,orosN), collapse="+")
}
}
formula_string <- paste("dedomena ~", seira)
lm_model <- lm(as.formula(formula_string))
lm_model
}
seiraFourier(y,c(4,2,4/3))
plot(1:n,y)
tPoints2 <- 1:n
lm(y ~ I(sin(2*pi*tPoints2/(4/3)))+I(cos(2*pi*tPoints2/(4/3)))+I(sin(2*pi*tPoints2/(4)))+I(cos(2*pi*tPoints2/(4)))+I(sin(2*pi*tPoints2/(2)))+I(cos(2*pi*tPoints2/(2))))
n <- 2000
y <- 1:n
tPoints <- 1:n
tPoints2 <- 1:n
h <- 0.01
for (t in 1:n) {
tPoints[t] <- h*t
y[t] <- 5*sin(2*pi*t*h/(4/3))+2*cos(2*pi*t*h/(4/3))-6*sin(2*pi*t*h/(4))+7*cos(2*pi*t*h/(4))-9*sin(2*pi*t*h/(2))+1*cos(2*pi*t*h/(2))
}
plot(tPoints,y)
plot(tPoints2,y)
lm(y ~ I(sin(2*pi*tPoints/(4/3)))+I(cos(2*pi*tPoints/(4/3)))+I(sin(2*pi*tPoints/(4)))+I(cos(2*pi*tPoints/(4)))+I(sin(2*pi*tPoints/(2)))+I(cos(2*pi*tPoints/(2))))
lm(y ~ I(sin(2*pi*tPoints2/(4/3)))+I(cos(2*pi*tPoints2/(4/3)))+I(sin(2*pi*tPoints2/(4)))+I(cos(2*pi*tPoints2/(4)))+I(sin(2*pi*tPoints2/(2)))+I(cos(2*pi*tPoints2/(2))))
tPoints2 <- 0:(n-1)
lm(y ~ I(sin(2*pi*tPoints2/(4/3)))+I(cos(2*pi*tPoints2/(4/3)))+I(sin(2*pi*tPoints2/(4)))+I(cos(2*pi*tPoints2/(4)))+I(sin(2*pi*tPoints2/(2)))+I(cos(2*pi*tPoints2/(2))))
h <- 0.05
for (t in 1:n) {
tPoints[t] <- h*t
y[t] <- 5*sin(2*pi*t*h/(4/3))+2*cos(2*pi*t*h/(4/3))-6*sin(2*pi*t*h/(4))+7*cos(2*pi*t*h/(4))-9*sin(2*pi*t*h/(2))+1*cos(2*pi*t*h/(2))
}
lm(y ~ I(sin(2*pi*tPoints/(4/3)))+I(cos(2*pi*tPoints/(4/3)))+I(sin(2*pi*tPoints/(4)))+I(cos(2*pi*tPoints/(4)))+I(sin(2*pi*tPoints/(2)))+I(cos(2*pi*tPoints/(2))))
h <- 1
for (t in 1:n) {
tPoints[t] <- h*t
y[t] <- 5*sin(2*pi*t*h/(4/3))+2*cos(2*pi*t*h/(4/3))-6*sin(2*pi*t*h/(4))+7*cos(2*pi*t*h/(4))-9*sin(2*pi*t*h/(2))+1*cos(2*pi*t*h/(2))
}
lm(y ~ I(sin(2*pi*tPoints/(4/3)))+I(cos(2*pi*tPoints/(4/3)))+I(sin(2*pi*tPoints/(4)))+I(cos(2*pi*tPoints/(4)))+I(sin(2*pi*tPoints/(2)))+I(cos(2*pi*tPoints/(2))))
h <- 0.5
for (t in 1:n) {
tPoints[t] <- h*t
y[t] <- 5*sin(2*pi*t*h/(4/3))+2*cos(2*pi*t*h/(4/3))-6*sin(2*pi*t*h/(4))+7*cos(2*pi*t*h/(4))-9*sin(2*pi*t*h/(2))+1*cos(2*pi*t*h/(2))
}
plot(tPoints,y)
h <- 0.1
for (t in 1:n) {
tPoints[t] <- h*t
y[t] <- 5*sin(2*pi*t*h/(4/3))+2*cos(2*pi*t*h/(4/3))-6*sin(2*pi*t*h/(4))+7*cos(2*pi*t*h/(4))-9*sin(2*pi*t*h/(2))+1*cos(2*pi*t*h/(2))
}
plot(tPoints,y)
plot(tPoints2,y)
lm(y ~ I(sin(2*pi*tPoints/(4/3)))+I(cos(2*pi*tPoints/(4/3)))+I(sin(2*pi*tPoints/(4)))+I(cos(2*pi*tPoints/(4)))+I(sin(2*pi*tPoints/(2)))+I(cos(2*pi*tPoints/(2))))
h <- 0.01
for (t in 1:n) {
tPoints[t] <- h*t
y[t] <- 5*sin(2*pi*t*h/(4/3))+2*cos(2*pi*t*h/(4/3))-6*sin(2*pi*t*h/(4))+7*cos(2*pi*t*h/(4))-9*sin(2*pi*t*h/(2))+1*cos(2*pi*t*h/(2))
}
plot(tPoints,y)
plot(tPoints2,y)
plot(tPoints2,y)
lm(y ~ I(sin(2*pi*tPoints/(4/3)))+I(cos(2*pi*tPoints/(4/3)))+I(sin(2*pi*tPoints/(4)))+I(cos(2*pi*tPoints/(4)))+I(sin(2*pi*tPoints/(2)))+I(cos(2*pi*tPoints/(2))))
lm(y ~ I(sin(2*pi*tPoints2/(4/3)))+I(cos(2*pi*tPoints2/(4/3)))+I(sin(2*pi*tPoints2/(4)))+I(cos(2*pi*tPoints2/(4)))+I(sin(2*pi*tPoints2/(2)))+I(cos(2*pi*tPoints2/(2))))
for (t in 1:n) {
tPoints[t] <- h*t
y[t] <- 5*sin(2*pi*t*h/(4/3))+2*cos(2*pi*t*h/(4/3))-6*sin(2*pi*t*h/(4))+7*cos(2*pi*t*h/(4))-9*sin(2*pi*t*h/(2))+1*cos(2*pi*t*h/(2))
yy[t] <- 5*sin(2*pi*t/(4/3))+2*cos(2*pi*t/(4/3))-6*sin(2*pi*t/(4))+7*cos(2*pi*t/(4))-9*sin(2*pi*t/(2))+1*cos(2*pi*t/(2))
}
plot(tPoints2,yy)
y <- 1:n
yy <- 1:n
tPoints <- 1:n
tPoints2 <- 1:n
h <- 0.01
for (t in 1:n) {
tPoints[t] <- h*t
y[t] <- 5*sin(2*pi*t*h/(4/3))+2*cos(2*pi*t*h/(4/3))-6*sin(2*pi*t*h/(4))+7*cos(2*pi*t*h/(4))-9*sin(2*pi*t*h/(2))+1*cos(2*pi*t*h/(2))
yy[t] <- 5*sin(2*pi*t/(4/3))+2*cos(2*pi*t/(4/3))-6*sin(2*pi*t/(4))+7*cos(2*pi*t/(4))-9*sin(2*pi*t/(2))+1*cos(2*pi*t/(2))
}
plot(tPoints,y)
plot(tPoints2,yy)
n <- 2000
y <- 1:n
yy <- 1:n
tPoints <- 1:n
tPoints2 <- 1:n
h <- 0.01
for (t in 1:n) {
tPoints[t] <- h*t
y[t] <- 5*sin(2*pi*t*h/(4/3))+2*cos(2*pi*t*h/(4/3))-6*sin(2*pi*t*h/(4))+7*cos(2*pi*t*h/(4))-9*sin(2*pi*t*h/(2))+1*cos(2*pi*t*h/(2))
yy[t] <- 5*sin(2*pi*t/(4/3))+2*cos(2*pi*t/(4/3))-6*sin(2*pi*t/(4))+7*cos(2*pi*t/(4))-9*sin(2*pi*t/(2))+1*cos(2*pi*t/(2))
}
plot(tPoints,y)
plot(tPoints2,yy)
# Ο αριθμός των όρων της σειράς Fourier που θέλουμε
n0 <- 5  # Συμπληρώστε με τον επιθυμητό αριθμό όρων
# Υπολογισμός του μήκους της λίστας y
N <- length(y)
# Εφαρμογή του FFT
Y_fft <- fft(y)
# Διατήρηση μόνο των πρώτων n όρων της σειράς Fourier
Y_fft <- Y_fft[1:n0]
# Ανασύνθεση του σήματος χρησιμοποιώντας τους n όρους της σειράς Fourier
y_reconstructed <- Re(fft(Y_fft, inverse = TRUE) / N)
# Επέκταση του ανακατασκευασμένου σήματος στο αρχικό μήκος N
y_reconstructed <- rep(y_reconstructed, length.out = N)
# Εκτύπωση των αποτελεσμάτων
cat("Αρχικό σήμα: \n")
print(y)
cat("Ανακατασκευασμένο σήμα με", n, "όρους της σειράς Fourier: \n")
print(y_reconstructed)
plot(y_reconstructed)
lm(y ~ I(sin(2*pi*tPoints/(4/3)))+I(cos(2*pi*tPoints/(4/3)))+I(sin(2*pi*tPoints/(4)))+I(cos(2*pi*tPoints/(4)))+I(sin(2*pi*tPoints/(2)))+I(cos(2*pi*tPoints/(2))))
plot(y)
y
y
# Φόρτωση της λίστας τιμών y
h <- 0.1
t <- (1:1000)*h
y <-  sin(t)+5cos(2*t) # Συμπληρώστε με τις τιμές της λίστας
# Ο αριθμός των όρων της σειράς Fourier που θέλουμε
n <- 5  # Συμπληρώστε με τον επιθυμητό αριθμό όρων
# Υπολογισμός του μήκους της λίστας y
N <- length(y)
# Εφαρμογή του FFT
Y_fft <- fft(y)
# Υπολογισμός των συντελεστών
a0 <- Re(Y_fft[1]) / N
a <- 2 * Re(Y_fft[2:(n+1)]) / N
b <- -2 * Im(Y_fft[2:(n+1)]) / N
# Εκτύπωση των συντελεστών
cat("Συντελεστές της σειράς Fourier:\n")
cat("a0 (συντελεστής της σταθεράς):", a0, "\n")
for (k in 1:n) {
cat("a", k, "(συντελεστής του cos(", k, "*x)):", a[k], "\n")
cat("b", k, "(συντελεστής του sin(", k, "*x)):", b[k], "\n")
}
plot(y)
# Φόρτωση της λίστας τιμών y
h <- 0.1
t <- (1:1000)*h
y <-  sin(t)+5cos(2*t) # Συμπληρώστε με τις τιμές της λίστας
y <-  sin(t)+5*cos(2*t) # Συμπληρώστε με τις τιμές της λίστας
plot(y)
plot(y, line)
plot(y, "l")
# Φόρτωση της λίστας τιμών y
h <- 0.1
t <- (1:1000)*h
y <-  sin(t)+5*cos(2*t) # Συμπληρώστε με τις τιμές της λίστας
plot(y, type = "l")
# Ο αριθμός των όρων της σειράς Fourier που θέλουμε
n <- 5  # Συμπληρώστε με τον επιθυμητό αριθμό όρων
# Υπολογισμός του μήκους της λίστας y
N <- length(y)
# Εφαρμογή του FFT
Y_fft <- fft(y)
# Υπολογισμός των συντελεστών
a0 <- Re(Y_fft[1]) / N
a <- 2 * Re(Y_fft[2:(n+1)]) / N
b <- -2 * Im(Y_fft[2:(n+1)]) / N
# Εκτύπωση των συντελεστών
cat("Συντελεστές της σειράς Fourier:\n")
cat("a0 (συντελεστής της σταθεράς):", a0, "\n")
for (k in 1:n) {
cat("a", k, "(συντελεστής του cos(", k, "*x)):", a[k], "\n")
cat("b", k, "(συντελεστής του sin(", k, "*x)):", b[k], "\n")
}
pi
y <-  sin(pi*t)+5*cos(2*pi*t/2) # Συμπληρώστε με τις τιμές της λίστας
plot(y, type = "l")
# Ο αριθμός των όρων της σειράς Fourier που θέλουμε
n <- 5  # Συμπληρώστε με τον επιθυμητό αριθμό όρων
# Υπολογισμός του μήκους της λίστας y
N <- length(y)
# Εφαρμογή του FFT
Y_fft <- fft(y)
# Υπολογισμός των συντελεστών
a0 <- Re(Y_fft[1]) / N
a <- 2 * Re(Y_fft[2:(n+1)]) / N
b <- -2 * Im(Y_fft[2:(n+1)]) / N
# Εκτύπωση των συντελεστών
cat("Συντελεστές της σειράς Fourier:\n")
cat("a0 (συντελεστής της σταθεράς):", a0, "\n")
for (k in 1:n) {
cat("a", k, "(συντελεστής του cos(", k, "*x)):", a[k], "\n")
cat("b", k, "(συντελεστής του sin(", k, "*x)):", b[k], "\n")
}
# Ανασύνθεση του σήματος χρησιμοποιώντας τους n όρους της σειράς Fourier
y_reconstructed <- a0 + rowSums(sapply(1:n, function(k) {
a[k] * cos(2 * pi * (k-1) * (0:(N-1)) / N) + b[k] * sin(2 * pi * (k-1) * (0:(N-1)) / N)
}))
# Εκτύπωση των αποτελεσμάτων
cat("Αρχικό σήμα: \n")
print(y)
# Εκτύπωση των συντελεστών
cat("Συντελεστές της σειράς Fourier:\n")
cat("a0 (συντελεστής της σταθεράς):", a0, "\n")
for (k in 1:n) {
cat("a", k, "(συντελεστής του cos(", k, "*x)):", a[k], "\n")
cat("b", k, "(συντελεστής του sin(", k, "*x)):", b[k], "\n")
}
install.packages(c("cli", "rlang", "stringi", "yaml"))
install.packages("knitr")
install.packages("knitr")
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages(c("evaluate", "highr", "markdown", "stringr", "yaml", "htmltools", "caTools", "bitops", "rprojroot"))
install.packages(c("evaluate", "highr", "markdown", "stringr", "yaml", "htmltools", "caTools", "bitops", "rprojroot"))
install.packages("devtools")
devtools::install_github("r-lib/evaluate")
remove.packages("knitr")
remove.packages("rmarkdown")
install.packages("knitr")
install.packages("knitr")
install.packages("rmarkdown")
install.packages("rmarkdown")
packageVersion("knitr")
update.packages("knitr")
rmarkdown::render("test.Rmd")
devtools::install_github('mages/googleVis')
devtools::install_github("yihui/knitr")
install.packages("rlang")
install.packages("rlang")
install.packages(c("cli", "yaml"))
remove.packages("yaml")
remove.packages("cli")
instal.packages("cli")
install.packages("cli")
install.packages("yaml")
remove.packages(yaml)
remove.packages("yaml")
library(devtools)
install_version("yaml", version = "1.2.2")
install_version("yaml", version = "1.2")
install_version("yaml", version = "2.3.9")
remove.packages("yaml")
install_version("yaml", version = "2.3.9")
.libPaths()
remove.packages("yaml")
install.packages("yaml")
install.packages("RcppParallel")
$ 502:  pandoc -v
pandoc -v
which pandoc
which pandoc pandoc -v
library(rmarkdown)
sessionInfo()
rm .Renviron
