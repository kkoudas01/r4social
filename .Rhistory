geom_jitter(position=position_jitterdodge(), alpha = 0.2, size = 1) +
scale_fill_manual(values = c("blue", "orange"))+ ggtitle("Σύγκριση αποτελεσμάτων της Ελλάδας με υπολοίπων χωρών.")
wilcox.test(MATH ~ isGR, data = allPISAtot)
wilcox.test(SCIENCE ~ isGR, data = allPISAtot)
wilcox.test(READING ~ isGR, data = allPISAtot)
cohen.d(MATH ~ isGR, data = allPISAtot)
wilcox_effsize(MATH ~ isGR, data = allPISAtot)
cohen.d(SCIENCE ~ isGR, data = allPISAtot)
wilcox_effsize(SCIENCE ~ isGR, data = allPISAtot)
cohen.d(READING ~ isGR, data = allPISAtot)
wilcox_effsize(READING ~ isGR, data = allPISAtot)
histBOYgr <- ggplot(boyPISAlong, aes(y=TYPE_exam, x=Value, fill = isGR, alpha = 0.4))
histBOYgr + geom_density_ridges() +
scale_fill_manual(values = c("blue", "orange"))+ ggtitle("Σύγκριση αποτελεσμάτων της Ελλάδας με υπολοίπων χωρών (αγόρια).")
boxplotBOYgr <- ggplot(boyPISAlong, aes(x=TYPE_exam, y=Value, fill = isGR))
boxplotBOYgr +
geom_boxplot(outlier.shape = NA) +
geom_jitter(position=position_jitterdodge(), alpha = 0.2, size = 1) +
scale_fill_manual(values = c("blue", "orange"))+ ggtitle("Σύγκριση αποτελεσμάτων της Ελλάδας με υπολοίπων χωρών (αγόρια).")
wilcox.test(MATH ~ isGR, data = boyPISA)
wilcox.test(SCIENCE ~ isGR, data = boyPISA)
wilcox.test(READING ~ isGR, data = boyPISA)
cohen.d(MATH ~ isGR, data = boyPISA)
wilcox_effsize(MATH ~ isGR, data = boyPISA)
cohen.d(SCIENCE ~ isGR, data = boyPISA)
wilcox_effsize(SCIENCE ~ isGR, data = boyPISA)
cohen.d(READING ~ isGR, data = boyPISA)
wilcox_effsize(READING ~ isGR, data = boyPISA)
histGIRLgr <- ggplot(girlPISAlong, aes(y=TYPE_exam, x=Value, fill = isGR, alpha = 0.4))
histGIRLgr + geom_density_ridges() +
scale_fill_manual(values = c("blue", "orange"))+ ggtitle("Σύγκριση αποτελεσμάτων της Ελλάδας με υπολοίπων χωρών (κορίτσια).")
boxplotGIRLgr <- ggplot(girlPISAlong, aes(x=TYPE_exam, y=Value, fill = isGR))
boxplotGIRLgr +
geom_boxplot(outlier.shape = NA) +
geom_jitter(position=position_jitterdodge(), alpha = 0.2, size = 1) +
scale_fill_manual(values = c("blue", "orange"))+ ggtitle("Σύγκριση αποτελεσμάτων της Ελλάδας με υπολοίπων χωρών (κορότσια).")
wilcox.test(MATH ~ isGR, data = girlPISA)
wilcox.test(SCIENCE ~ isGR, data = girlPISA)
wilcox.test(READING ~ isGR, data = girlPISA)
cohen.d(MATH ~ isGR, data = girlPISA)
wilcox_effsize(MATH ~ isGR, data = girlPISA)
cohen.d(SCIENCE ~ isGR, data = girlPISA)
wilcox_effsize(SCIENCE ~ isGR, data = girlPISA)
cohen.d(READING ~ isGR, data = girlPISA)
wilcox_effsize(READING ~ isGR, data = girlPISA)
hist_bg <- ggplot(allPISAbglong, aes(y=TYPE_exam, x=Value, fill = SUBJECT, alpha = 0.4))
hist_bg + geom_density_ridges() +
scale_fill_manual(values = c("cyan", "pink")) + ggtitle("Σύγκριση επίδοσης σε αγόρια και κορίτσια σε κάθε μάθημα.")
boxplot_bg <- ggplot(allPISAbglong, aes(x=TYPE_exam, y=Value, fill = factor(SUBJECT))) + ggtitle("Σύγκριση επίδοσης σε αγόρια και κορίτσια σε κάθε μάθημα.")
boxplot_bg +
geom_boxplot(outlier.shape = NA)+
geom_jitter(position=position_jitterdodge(), alpha = 0.2)+
scale_fill_manual(values = c("cyan", "pink")) + ggtitle("Σύγκριση επίδοσης σε αγόρια και κορίτσια σε κάθε μάθημα.")
wilcox.test(MATH ~ SUBJECT, data = allPISAbg)
wilcox.test(SCIENCE ~ SUBJECT, data = allPISAbg)
wilcox.test(READING ~ SUBJECT, data = allPISAbg)
cohen.d(MATH ~ SUBJECT, data = allPISAbg)
wilcox_effsize(MATH ~ SUBJECT, data = allPISAbg)
cohen.d(SCIENCE ~ SUBJECT, data = allPISAbg)
wilcox_effsize(SCIENCE ~ SUBJECT, data = allPISAbg)
cohen.d(READING ~ SUBJECT, data = allPISAbg)
wilcox_effsize(READING ~ SUBJECT, data = allPISAbg)
mathBoyGirl <- ggplot(mathPISAbgwide, aes(x = BOY, y = GIRL))
mathBoyGirl + geom_point() + geom_smooth(method='lm') + ggtitle("Συσχέτιση επίδοσης αγοριών – κοριτσιών στα Μαθηματικά.")
scienceBoyGirl <- ggplot(sciencePISAbgwide, aes(x = BOY, y = GIRL))
scienceBoyGirl + geom_point() + geom_smooth(method='lm') + ggtitle("Συσχέτιση επίδοσης αγοριών – κοριτσιών στις Φυσικές Επιστήμες.")
readingBoyGirl <- ggplot(readingPISAbgwide, aes(x = BOY, y = GIRL))
readingBoyGirl + geom_point() + geom_smooth(method='lm') + ggtitle("Συσχέτιση επίδοσης αγοριών – κοριτσιών στην Κατανόηση Κειμένου.")
boxplot_tot2 <- ggplot(allPISAtotlong, aes(x="", y=Value, fill = TYPE_exam))
boxplot_tot2 +
geom_boxplot(outlier.shape = NA)+
scale_fill_manual(values = c("red", "green", "yellow"))+
geom_jitter(position=position_jitterdodge(), alpha = 0.2)+ggtitle("Σύγκριση επιδόσεων στα διάφορα αντικείμενα εξέτασης.")
kruskal.test(Value ~ TYPE_exam, data = allPISAtotlong)
hist_bg2 <- ggplot(allPISAbglong, aes(y=SUBJECT, x=Value, fill = TYPE_exam, alpha = 0.4))
hist_bg2 + geom_density_ridges() +
scale_fill_manual(values = c("red", "green", "yellow"))+ggtitle("Σύγκριση επιδόσεων στα διάφορα αντικείμενα εξέτασης σε αγόρια και κορίτσια.")
boxplot_bg2 <- ggplot(allPISAbglong, aes(x=SUBJECT, y=Value, fill = TYPE_exam))
boxplot_bg2 +
geom_boxplot(outlier.shape = NA)+
scale_fill_manual(values = c("red", "green", "yellow"))+
geom_jitter(position=position_jitterdodge(), alpha = 0.2)+ggtitle("Σύγκριση επιδόσεων στα διάφορα αντικείμενα εξέτασης σε αγόρια και κορίτσια.")
kruskal.test(Value ~ TYPE_exam, data = boyPISAlong)
kruskal.test(Value ~ TYPE_exam, data = girlPISAlong)
totMathScience <- ggplot(allPISAtot, aes(x = MATH, y = SCIENCE))
totMathScience + geom_point() + geom_smooth()+ggtitle("Συσχέτιση επίδοσης Μαθηματικών και Φυσικών Επιστημών.")
totMathReading <- ggplot(allPISAtot, aes(x = MATH, y = READING))
totMathReading + geom_point() + geom_smooth()+ggtitle("Συσχέτιση επίδοσης Μαθηματικών και Κατανόησης Κειμένου.")
totScienceReading <- ggplot(allPISAtot, aes(x = SCIENCE, y = READING))
totScienceReading + geom_point() + geom_smooth()+ggtitle("Συσχέτιση επίδοσης Φυσικών Επιστημών και Κατανόησης Κειμένου.")
corrplot(typeExam_tot, method="color", addCoef.col = 'black', is.corr = FALSE, col.lim = c(0.9, 1), title= "Pearson")
corrplot(typeExam_tot.K, method="color", addCoef.col = 'black', is.corr = FALSE, col.lim = c(0.6, 1), title="Kendall")
boyMathScience <- ggplot(boyPISA, aes(x = MATH, y = SCIENCE))
boyMathScience + geom_point() + geom_smooth()+ggtitle("Συσχέτιση επίδοσης:\n Μαθηματικών και Φυσικών Επιστημών\n (αγόρια).")
boyMathReading <- ggplot(boyPISA, aes(x = MATH, y = READING))
boyMathReading + geom_point() + geom_smooth()+ggtitle("Συσχέτιση επίδοσης:\n Μαθηματικών και Κατανόησης Κειμένου \n (αγόρια).")
boyScienceReading <- ggplot(boyPISA, aes(x = SCIENCE, y = READING))
boyScienceReading + geom_point() + geom_smooth()+ggtitle("Συσχέτιση επίδοσης: \n Φυσικών Επιστημών και Κατανόησης Κειμένου \n (αγόρια).")
corrplot(typeExam_boy, method="color", addCoef.col = 'black', is.corr = FALSE, col.lim = c(0.9, 1), title="Pearson")
corrplot(typeExam_boy.K, method="color", addCoef.col = 'black', is.corr = FALSE, col.lim = c(0.6, 1), title="Kendall")
girlMathScience <- ggplot(girlPISA, aes(x = MATH, y = SCIENCE))
girlMathScience + geom_point() + geom_smooth()+ggtitle("Συσχέτιση επίδοσης:\n Μαθηματικών και Φυσικών Επιστημών\n (κορίτσια).")
girlMathReading <- ggplot(girlPISA, aes(x = MATH, y = READING))
girlMathReading + geom_point() + geom_smooth()+ggtitle("Συσχέτιση επίδοσης:\n Μαθηματικών και Κατανόησης Κειμένου\n (κορίτσια).")
girlScienceReading <- ggplot(girlPISA, aes(x = SCIENCE, y = READING))
girlScienceReading + geom_point() + geom_smooth()+ggtitle("Συσχέτιση επίδοσης:\n Φυσικών Επιστημών και Κατανόησης Κειμένου\n (κορίτσια).")
corrplot(typeExam_girl, method="color", addCoef.col = 'black', is.corr = FALSE, col.lim = c(0.9, 1), title="Pearson")
corrplot(typeExam_girl.K, method="color", addCoef.col = 'black', is.corr = FALSE, col.lim = c(0.6, 1), title="Kendall")
par( mfrow= c(1,2) )
hist_boxplot(math_ALL)
graf_symmetrias(math_ALL)
par( mfrow= c(1,2) )
hist_boxplot(math_boyALL)
graf_symmetrias(math_boyALL)
par( mfrow= c(1,2) )
hist_boxplot(math_girlALL)
graf_symmetrias(math_girlALL)
par( mfrow= c(1,2) )
hist_boxplot(science_ALL)
graf_symmetrias(science_ALL)
par( mfrow= c(1,2) )
hist_boxplot(science_boyALL)
graf_symmetrias(science_boyALL)
par( mfrow= c(1,2) )
hist_boxplot(science_girlALL)
graf_symmetrias(science_girlALL)
par( mfrow= c(1,2) )
hist_boxplot(reading_ALL)
graf_symmetrias(reading_ALL)
par( mfrow= c(1,2) )
hist_boxplot(reading_boyALL)
graf_symmetrias(reading_boyALL)
par( mfrow= c(1,2) )
hist_boxplot(reading_girlALL)
graf_symmetrias(reading_girlALL)
autoplot(GRtot_xs)
par( mfrow= c(1,3) )
acf(GRtot_xsMATH)
acf(GRtot_xsSCIENCE)
acf(GRtot_xsREADING)
corrplot(tr_math, is.corr = FALSE, method="color", col.lim = c(0,100), addCoef.col = 'black')
corrplot(tr_science, is.corr = FALSE, method="color", col.lim = c(0,100), addCoef.col = 'black')
corrplot(tr_reading, is.corr = FALSE, method="color", col.lim = c(0,100), addCoef.col = 'black')
tr_math2b <- tr_math2%*%tr_math2
tr_science2b <- tr_science2%*%tr_science2
tr_reading2b <- tr_reading2%*%tr_reading2
tr_math2b <- tr_math2b*100
tr_science2b <- tr_science2b*100
tr_reading2b <- tr_reading2b*100
rownames(tr_math2b) <- c("A.math", "B.math", "C.math", "D.math")
colnames(tr_math2b) <- c("A.math", "B.math", "C.math", "D.math")
rownames(tr_science2b) <- c("A.science", "B.science", "C.science", "D.science")
colnames(tr_science2b) <- c("A.science", "B.science", "C.science", "D.science")
rownames(tr_reading2b) <- c("A.reading", "B.reading", "C.reading", "D.reading")
colnames(tr_reading2b) <- c("A.reading", "B.reading", "C.reading", "D.reading")
corrplot(tr_math2b, is.corr = FALSE, method="color", col.lim = c(0,100), addCoef.col = 'black')
corrplot(tr_science2b, is.corr = FALSE, method="color", col.lim = c(0,100), addCoef.col = 'black')
corrplot(tr_reading2b, is.corr = FALSE, method="color", col.lim = c(0,100), addCoef.col = 'black')
mathPISAtot <- mathPISA[mathPISA$SUBJECT == "TOT", ]
mathPISAtot_wide <- dcast(mathPISAtot, TIME ~ LOCATION, value.var="Value")
mathPISAtot_wide <- as.data.frame(mathPISAtot_wide)
astrogramma(mathPISAtot_wide, FALSE)
sciencePISAtot <- sciencePISA[sciencePISA$SUBJECT == "TOT", ]
sciencePISAtot_wide <- dcast(sciencePISAtot, TIME ~ LOCATION, value.var="Value")
sciencePISAtot_wide <- as.data.frame(sciencePISAtot_wide)
astrogramma(sciencePISAtot_wide, FALSE)
readingPISAtot <- readingPISA[readingPISA$SUBJECT == "TOT", ]
readingPISAtot_wide <- dcast(readingPISAtot, TIME ~ LOCATION, value.var="Value")
readingPISAtot_wide <- as.data.frame(readingPISAtot_wide)
astrogramma(readingPISAtot_wide, FALSE)
mathNA <- math_ALL[!is.na(math_ALL)]
descdist(mathNA, discrete = FALSE, boot = 200)
scienceNA <- science_ALL[!is.na(science_ALL)]
descdist(scienceNA, discrete = FALSE, boot = 200)
readingNA <- reading_ALL[!is.na(reading_ALL)]
descdist(readingNA, discrete = FALSE, boot = 200)
rmarkdown::render_site()
knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
rm(list = ls())
if(!require(Rcrawler)){
install.packages("Rcrawler")
library(Rcrawler)
}
if(!require(Rcrawler)){
install.packages("Rcrawler")
library(Rcrawler)
}
Rcrawler(Website = "http://www.glofile.com", no_cores = 4, no_conn = 4)
INDEX
View(INDEX)
Rcrawler(Website = "http://www.spitogatos.gr", no_cores = 4, no_conn = 4)
if(!require(tidyverse)){
install.packages("tidyverse")
library(tidyverse)
}
if(!require(Rcrawler)){
install.packages("Rcrawler")
library(Rcrawler)
}
if(!require(tidyverse)){
install.packages("tidyverse")
library(tidyverse)
}
if(!require(Rcrawler)){
install.packages("Rcrawler")
library(Rcrawler)
}
Rcrawler(Website = "http://www.spitogatos.gr",
crawlUrlfilter = "/aggelia",
no_cores = 4,
no_conn = 4,
MaxDepth = 1,
saveOnDisk = FALSE)
View(INDEX)
Rcrawler(Website = "http://www.spitogatos.gr",
#crawlUrlfilter = "/aggelia",
no_cores = 4,
no_conn = 4,
MaxDepth = 1,
saveOnDisk = FALSE)
Rcrawler(Website = "http://www.spitogatos.gr",
crawlUrlfilter = "/aggelia",
no_cores = 4,
no_conn = 4,
#MaxDepth = 1,
saveOnDisk = FALSE)
Rcrawler(Website = "http://www.spitogatos.gr",
crawlUrlfilter = "/aggelia/",
no_cores = 4,
no_conn = 4,
#MaxDepth = 1,
saveOnDisk = FALSE)
Rcrawler(Website = "http://www.spitogatos.gr",
crawlUrlfilter = "/aggelia/",
no_cores = 4,
no_conn = 4,
MaxDepth = 1,
saveOnDisk = FALSE)
View(INDEX)
Rcrawler(Website = "http://www.spitogatos.gr",
#crawlUrlfilter = "/aggelia/",
no_cores = 4,
no_conn = 4,
#MaxDepth = 1,
saveOnDisk = FALSE)
rm(list = ls())
if(!require(tidyverse)){
install.packages("tidyverse")
library(tidyverse)
}
if(!require(Rcrawler)){
install.packages("Rcrawler")
library(Rcrawler)
}
Rcrawler(Website = "http://www.spitogatos.gr",
#crawlUrlfilter = "/aggelia/",
no_cores = 4,
no_conn = 4,
#MaxDepth = 1,
saveOnDisk = FALSE)
Rcrawler(Website = "http://www.spitogatos.gr",
#crawlUrlfilter = "/aggelia/",
no_cores = 4,
no_conn = 4,
#MaxDepth = 1,
#saveOnDisk = FALSE
)
Rcrawler(Website = "http://www.spitogatos.gr",
#crawlUrlfilter = "/aggelia/",
no_cores = 4,
no_conn = 4
#MaxDepth = 1,
#saveOnDisk = FALSE
)
knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
rm(list = ls())
if(!require(tidyverse)){
install.packages("tidyverse")
library(tidyverse)
}
if(!require(Rcrawler)){
install.packages("Rcrawler")
library(Rcrawler)
}
Rcrawler(Website = "http://www.spitogatos.gr")
knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
rm(list = ls())
if(!require(tidyverse)){
install.packages("tidyverse")
library(tidyverse)
}
if(!require(Rcrawler)){
install.packages("Rcrawler")
library(Rcrawler)
}
Rcrawler(Website = "http://www.spitogatos.gr", no_cores = 4, no_conn = 4)
View(INDEX)
Rcrawler(Website = "http://www.spitogatos.gr",
crawlUrlfilter = "/aggelia/",
no_cores = 4,
no_conn = 4,
MaxDepth = 1,
saveOnDisk = FALSE
)
Rcrawler(Website = "http://www.spitogatos.gr",
crawlUrlfilter = "/aggelia/",
no_cores = 4,
no_conn = 4,
MaxDepth = 1,
saveOnDisk = FALSE
)
knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
rm(list = ls())
if(!require(tidyverse)){
install.packages("tidyverse")
library(tidyverse)
}
if(!require(Rcrawler)){
install.packages("Rcrawler")
library(Rcrawler)
}
install_browser()
Rcrawler(Website = "http://www.spitogatos.gr",
crawlUrlfilter = "/aggelia/",
no_cores = 4,
no_conn = 4,
MaxDepth = 1,
saveOnDisk = FALSE
)
Rcrawler(Website = "http://www.spitogatos.gr",
crawlUrlfilter = "/aggelia/",
no_cores = 4,
no_conn = 4,
MaxDepth = 1,
saveOnDisk = FALSE
)
View(INDEX)
Rcrawler(Website = "http://www.spitogatos.gr",
crawlUrlfilter = "/aggelia/",
no_cores = 4,
no_conn = 4,
# MaxDepth = 1,
saveOnDisk = FALSE
)
Rcrawler(Website = "http://www.spitogatos.gr",
crawlUrlfilter = "/aggelia/",
no_cores = 4,
no_conn = 4,
# MaxDepth = 1,
saveOnDisk = FALSE
)
View(INDEX)
Rcrawler(Website = "http://www.spitogatos.gr",
# crawlUrlfilter = "/aggelia/",
no_cores = 4,
no_conn = 4,
# MaxDepth = 1,
saveOnDisk = FALSE
)
Rcrawler(Website = "http://www.spitogatos.gr",
# crawlUrlfilter = "/aggelia/",
no_cores = 4,
no_conn = 4,
# MaxDepth = 1,
saveOnDisk = FALSE
)
View(INDEX)
aggelies <- Rcrawler(Website = "http://www.spitogatos.gr",
crawlUrlfilter = "/aggelia/",
no_cores = 4,
no_conn = 4,
# MaxDepth = 1,
saveOnDisk = FALSE
)
aggelies <- Rcrawler(Website = "http://www.spitogatos.gr",
crawlUrlfilter = "/aggelia/",
no_cores = 4,
no_conn = 4,
# MaxDepth = 1,
saveOnDisk = FALSE
)
View(INDEX)
if(!require(tidyverse)){
install.packages("tidyverse")
library(tidyverse)
}
if(!require(Rcrawler)){
install.packages("Rcrawler")
library(Rcrawler)
}
# install_browser()
knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
rm(list = ls())
if(!require(tidyverse)){
install.packages("tidyverse")
library(tidyverse)
}
if(!require(Rcrawler)){
install.packages("Rcrawler")
library(Rcrawler)
}
# install_browser()
knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
DFtoMATHEMATICA <- function(dedomena) {
dedomenaDF <- as.data.frame(dedomena)
n <- length(dedomenaDF[,1])
dataMathematica <- c()
for (j in 1:n) {
dataMathematica <- append(dataMathematica,paste("{",paste(dedomenaDF[j,],collapse=","),"}"))
}
dataMathematica <- paste(dataMathematica,collapse=",")
dataMathematica <- paste("{",dataMathematica,"}")
arxeio_exodou <- "DFmathematica.txt"
# Ανοίξτε το αρχείο για εγγραφή
arxeio <- file(arxeio_exodou, "w")
# Εγγραφή του πίνακα σε αρχείο σε μορφή Mathematica
writeLines(dataMathematica, arxeio)
# Κλείστε το αρχείο
close(arxeio)
}
rm(list = ls())
DFtoMATHEMATICA <- function(dedomena) {
dedomenaDF <- as.data.frame(dedomena)
n <- length(dedomenaDF[,1])
dataMathematica <- c()
for (j in 1:n) {
dataMathematica <- append(dataMathematica,paste("{",paste(dedomenaDF[j,],collapse=","),"}"))
}
dataMathematica <- paste(dataMathematica,collapse=",")
dataMathematica <- paste("{",dataMathematica,"}")
arxeio_exodou <- "DFmathematica.txt"
# Ανοίξτε το αρχείο για εγγραφή
arxeio <- file(arxeio_exodou, "w")
# Εγγραφή του πίνακα σε αρχείο σε μορφή Mathematica
writeLines(dataMathematica, arxeio)
# Κλείστε το αρχείο
close(arxeio)
}
c1 <- c(1,2,3,4)
c2 <- c(5,1,7,8)
dataTest <- data.frame(c1,c2)
dataTest
DFtoMATHEMATICA(dataTest)
VtoMATHEMATICA <- function(dedomena) {
dedomenaV <- as.vector(dedomena)
n <- length(dedomenaV)
dataMathematica <- c()
for (j in 1:n) {
dataMathematica <- append(dataMathematica,paste(dedomenaV[j],collapse=","))
}
dataMathematica <- paste(dataMathematica,collapse=",")
dataMathematica <- paste("{",dataMathematica,"}")
arxeio_exodou <- "Vmathematica.txt"
# Ανοίξτε το αρχείο για εγγραφή
arxeio <- file(arxeio_exodou, "w")
# Εγγραφή του πίνακα σε αρχείο σε μορφή Mathematica
writeLines(dataMathematica, arxeio)
# Κλείστε το αρχείο
close(arxeio)
}
v1 <- c(10,12,24,52)
v1
VtoMATHEMATICA(v1)
knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
rm(list = ls())
DFtoMATHEMATICA <- function(dedomena) {
dedomenaDF <- as.data.frame(dedomena)
n <- length(dedomenaDF[,1])
dataMathematica <- c()
for (j in 1:n) {
dataMathematica <- append(dataMathematica,paste("{",paste(dedomenaDF[j,],collapse=","),"}"))
}
dataMathematica <- paste(dataMathematica,collapse=",")
dataMathematica <- paste("{",dataMathematica,"}")
arxeio_exodou <- "DFmathematica.txt"
# Ανοίξτε το αρχείο για εγγραφή
arxeio <- file(arxeio_exodou, "w")
# Εγγραφή του πίνακα σε αρχείο σε μορφή Mathematica
writeLines(dataMathematica, arxeio)
# Κλείστε το αρχείο
close(arxeio)
}
c1 <- c(1,2,3,4)
c2 <- c(5,1,7,8)
dataTest <- data.frame(c1,c2)
dataTest
VtoMATHEMATICA <- function(dedomena) {
dedomenaV <- as.vector(dedomena)
n <- length(dedomenaV)
dataMathematica <- c()
for (j in 1:n) {
dataMathematica <- append(dataMathematica,paste(dedomenaV[j],collapse=","))
}
dataMathematica <- paste(dataMathematica,collapse=",")
dataMathematica <- paste("{",dataMathematica,"}")
arxeio_exodou <- "Vmathematica.txt"
# Ανοίξτε το αρχείο για εγγραφή
arxeio <- file(arxeio_exodou, "w")
# Εγγραφή του πίνακα σε αρχείο σε μορφή Mathematica
writeLines(dataMathematica, arxeio)
# Κλείστε το αρχείο
close(arxeio)
}
v1 <- c(10,12,24,52)
v1
