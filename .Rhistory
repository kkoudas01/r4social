install.packages("lomb")
library(lomb)
}
lsp(massExt)
lsp(SeasonalMassExt)
lsp(massExt, type = "period")
lsp(SeasonalMassExt,type = "period")
lsp(SeasonalMassExt, from = 5, to = 25, type = "period")
lsp(SeasonalMassExt, from = 5, to = 25, type = "period", alpha = 0.05)
lsp(SeasonalMassExt, from = 5, to = 25, type = "period",
ofac = 100, alpha = 0.05)
lsp(gamoiSynolo)
gamoiSynolotsCompSeasonal <- seasonal(gamoiSynolotsComp)
plot(gamoiSynolotsCompSeasonal)
lsp(gamoiSynolotsCompSeasonal)
lsp(gamoiSynolotsCompSeasonal, ofac=100, type = "period")
lsp(gamoiSynolotsCompSeasonal, ofac=100, type = "period", from=1, to=5)
yTsCompSeasonal <- seasonal(yTsComp)
lsp(yTsCompSeasonal, ofac=100, type = "period", from=1, to=8)
prosdiorismosPerSyxn <- function(dedomena, apo = NULL, eos = NULL){
periodogramma <- lsp(dedomena, times = NULL, from = apo, to = eos, type = "period",
ofac = 130, alpha = 0.01, normalize="press", plot = FALSE)
per <- periodogramma$peak.at[1]
syxn <- periodogramma$peak.at[2]
Period <- c(per)
Frequency <- c(syxn)
data.frame(Period,Frequency)
}
prosdiorismosPerSyxn(SeasonalMassExt)
prosdiorismosPerSyxn(SeasonalMassExt, apo=4, eos=10)
prosdiorismosPerSyxn(gamoiSynolotsCompSeasonal)
prosdiorismosPerSyxn(gamoiSynolotsCompSeasonal, apo=1, eos=1.5)
prosdiorismosPerSyxn(gamoiSynolotsCompSeasonal, 3, 5)
seiraFourier <- function(t,dedomena, listPeriod){
n <- length(listPeriod)
T <- listPeriod[1]
seira <- paste(c("I(sin(2*pi*t/",T,"))+I(cos(2*pi*t/",T,"))"), collapse="")
if (n>1) {
for (i in 2:n) {
T <- listPeriod[i]
orosN <- paste(c("I(sin(2*pi*t/",T,"))+I(cos(2*pi*t/",T,"))"), collapse="")
seira <- paste(c(seira,orosN), collapse="+")
}
}
formula_string <- paste("dedomena ~", seira)
lm_model <- lm(as.formula(formula_string))
lm_model
}
seiraFourier2 <- function(dedomena, listPeriod){
t <- 1:length(dedomena)
n <- length(listPeriod)
T <- listPeriod[1]
seira <- paste(c("I(sin(2*pi*t/",T,"))+I(cos(2*pi*t/",T,"))"), collapse="")
if (n > 1) {
for (i in 2:n) {
T <- listPeriod[i]
orosN <- paste(c("I(sin(2*pi*t/",T,"))+I(cos(2*pi*t/",T,"))"), collapse="")
seira <- paste(c(seira, orosN), collapse="+")
}
}
formula_string <- paste("dedomena ~", seira)
lm_model <- lm(as.formula(formula_string))
return(lm_model)
}
seiraFourier2(SeasonalMassExt,c(6,12))
seiraFourier(1:length(SeasonalMassExt),SeasonalMassExt,c(6,12))
seiraFourier(xronosMassExt,SeasonalMassExt,c(6,12))
xronosMassExt <- 2004+(0:(length(SeasonalMassExt)-1))*(1/12)
seiraFourier(1:length(SeasonalMassExt),SeasonalMassExt,c(6,12))
seiraFourier(xronosMassExt,SeasonalMassExt,c(6,12))
seiraFourier2 <- function(t1, w, dedomena, listPeriod){
t <- 1:length(dedomena)
n <- length(listPeriod)
T <- listPeriod[1]
seira <- paste(c("I(sin(2*pi*(t1+(t-1)*w)/",T,"))+I(cos(2*pi*(t1+(t-1)*w)/",T,"))"), collapse="")
if (n > 1) {
for (i in 2:n) {
T <- listPeriod[i]
orosN <- paste(c("I(sin(2*pi*(t1+(t-1)*w)/",T,"))+I(cos(2*pi*(t1+(t-1)*w)/",T,"))"), collapse="")
seira <- paste(c(seira, orosN), collapse="+")
}
}
formula_string <- paste("dedomena ~", seira)
lm_model <- lm(as.formula(formula_string))
return(lm_model)
}
seiraFourier2(2004,0.25,SeasonalMassExt,c(6,12))
seiraFourier2 <- function(t1, w, dedomena, listPeriod){
t <- 1:length(dedomena)
n <- length(listPeriod)
T <- listPeriod[1]
seira <- paste(c("I(sin(2*pi*((t-t1)/w+1)/",T,"))+I(cos(2*pi*((t-t1)/w+1)/",T,"))"), collapse="")
if (n > 1) {
for (i in 2:n) {
T <- listPeriod[i]
orosN <- paste(c("I(sin(2*pi*((t-t1)/w+1)/",T,"))+I(cos(2*pi*((t-t1)/w+1)/",T,"))"), collapse="")
seira <- paste(c(seira, orosN), collapse="+")
}
}
formula_string <- paste("dedomena ~", seira)
lm_model <- lm(as.formula(formula_string))
return(lm_model)
}
seiraFourier2(2004,0.25,SeasonalMassExt,c(6,12))
seiraFourier <- function(dedomena, listPeriod){
t <- 1:length(dedomena)
n <- length(listPeriod)
T <- listPeriod[1]
seira <- paste(c("I(sin(2*pi*t/",T,"))+I(cos(2*pi*t/",T,"))"), collapse="")
if (n>1) {
for (i in 2:n) {
T <- listPeriod[i]
orosN <- paste(c("I(sin(2*pi*t/",T,"))+I(cos(2*pi*t/",T,"))"), collapse="")
seira <- paste(c(seira,orosN), collapse="+")
}
}
formula_string <- paste("dedomena ~", seira)
lm_model <- lm(as.formula(formula_string))
lm_model
}
seiraFourier(SeasonalMassExt,c(6,12))
seiraFourier(SeasonalMassExt,c(6,12))
plot(1:length(SeasonalMassExt),SeasonalMassExt)
curve(-0.0002849-8.3567745*sin(2 * pi * x/6)-4.5117178*cos(2 * pi * x/6)+12.8772886*sin(2 * pi * x/12)+6.6012389*cos(2 * pi * x/12), add = TRUE, col = "violet")
?curve
plot(1:length(SeasonalMassExt),SeasonalMassExt)
curve(-0.0002849-8.3567745*sin(2 * pi * x/6)-4.5117178*cos(2 * pi * x/6)+12.8772886*sin(2 * pi * x/12)+6.6012389*cos(2 * pi * x/12), add = TRUE, col = "violet", n=1000)
plot(1:length(SeasonalMassExt),SeasonalMassExt)
curve(-0.0002849-8.3567745*sin(2 * pi * x/6)-4.5117178*cos(2 * pi * x/6)+12.8772886*sin(2 * pi * x/12)+6.6012389*cos(2 * pi * x/12), add = TRUE, col = "violet", n=10000)
plot(1:length(SeasonalMassExt),SeasonalMassExt)
curve(-0.0002849-8.3567745*sin(2 * pi * x/6)-4.5117178*cos(2 * pi * x/6)+12.8772886*sin(2 * pi * x/12)+6.6012389*cos(2 * pi * x/12), add = TRUE, col = "red", n=10000)
plot(SeasonalMassExt)
curve(-0.0002849-8.3567745*sin(2 * pi * x/6)-4.5117178*cos(2 * pi * x/6)+12.8772886*sin(2 * pi * x/12)+6.6012389*cos(2 * pi * x/12), add = TRUE, col = "red", n=10000)
plot(1:length(SeasonalMassExt),SeasonalMassExt)
curve(-0.0002849-8.3567745*sin(2 * pi * x/6)-4.5117178*cos(2 * pi * x/6)+12.8772886*sin(2 * pi * x/12)+6.6012389*cos(2 * pi * x/12), add = TRUE, col = "red", n=10000)
seiraFourier(gamoiSynolotsCompSeasonal,c(4/3,2,4))
seiraFourier(gamoiSynolotsCompSeasonal,c(4/3,2,4))
seiraFourier(gamoiSynolotsCompSeasonal,c(4/3,2))
seiraFourier(gamoiSynolotsCompSeasonal,c(4/3,2,4))
seiraFourier(gamoiSynolotsCompSeasonal,c(4/3,2))
seiraFourier(gamoiSynolotsCompSeasonal,c(4/3,2))
seiraFourier(gamoiSynolotsCompSeasonal,c(4,2))
plot(1:length(gamoiSynolotsCompSeasonal),gamoiSynolotsCompSeasonal)
curve(3854*sin(2 * pi * x/(4/3))+1209*cos(2 * pi * x/(4/3))+5708*sin(2 * pi * x/2)+3414*cos(2 * pi * x/2), add = TRUE, col = "red", n=10000)
plot(1:length(gamoiSynolotsCompSeasonal),gamoiSynolotsCompSeasonal)
curve(3854*sin(2 * pi * x/(4))+1209*cos(2 * pi * x/(4))-951.4*sin(2 * pi * x/2)+3414*cos(2 * pi * x/2), add = TRUE, col = "red", n=10000)
seiraFourier(seasonal(yTsComp),c(3,6))
seiraFourier(seasonal(yTsComp),c(3,6))
rmarkdown::render_site()
knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
rm(list = ls())
massExtDF <- read.csv("massExt.csv")
knitr::kable(massExtDF) %>%
kable_styling("striped", full_width = F) %>%
scroll_box(width = "max-content", height = "200px")
if(!require(readxl)){
install.packages("readxl")
library(readxl)
}
gamoi <- readxl::read_excel("gamoi.xlsx")
knitr::kable(gamoi) %>%
kable_styling("striped", full_width = F) %>%
scroll_box(width = "max-content", height = "200px")
massExt <- massExtDF$mass.extinction...United.States.
gamoiSynolo <- gamoi$GamoiSynolo
x <- 1:100
y <- x+6*sin( (2*pi/3) * x)-4*cos( (2*pi/6) * x)+rnorm(100)
plot(massExt, type ="l")
plot(gamoiSynolo, type ="l")
plot(y, type ="l")
if(!require(forecast)){
install.packages("forecast")
library(forecast)
}
gglagplot(massExt, continuous = TRUE, set.lags = 2*(1:10))
gglagplot(gamoiSynolo, continuous = TRUE, set.lags = 2*(1:10))
gglagplot(y, continuous = TRUE, set.lags = 2*(1:10))
acf(massExt)
acf(gamoiSynolo)
acf(y)
massExtts <- ts(massExtDF$mass.extinction...United.States., start = c(2004, 1), freq=12)
gamoiSynolots <- ts(gamoi$GamoiSynolo, start = 0, freq=4)
yTs <- ts(y, start = 0, frequency = 6)
if(!require(seastests)){
install.packages("seastests")
library(seastests)
}
isSeasonal(massExt, freq=12)
isSeasonal(massExtts)
isSeasonal(gamoiSynolo, freq=4)
isSeasonal(gamoiSynolots)
isSeasonal(y, freq=6)
isSeasonal(yTs)
isSeasonal(y, freq=7)
massExttsComp <- stl(massExtts, s.window = "periodic")
plot(massExttsComp)
SeasonalMassExt <- seasonal(massExttsComp)
plot(SeasonalMassExt)
TrendMassExt <- trendcycle(massExttsComp)
plot(TrendMassExt)
RemainderMassExt <- remainder(massExttsComp)
plot(RemainderMassExt)
gamoiSynolotsComp <- stl(gamoiSynolots, s.window = "periodic")
plot(gamoiSynolotsComp)
yTsComp <- stl(yTs, s.window = "periodic")
plot(yTsComp)
if(!require(lomb)){
install.packages("lomb")
library(lomb)
}
lsp(massExt)
lsp(SeasonalMassExt)
lsp(massExt, type = "period")
lsp(SeasonalMassExt,type = "period")
lsp(SeasonalMassExt, from = 5, to = 25, type = "period")
lsp(SeasonalMassExt, from = 5, to = 25, type = "period", alpha = 0.05)
lsp(SeasonalMassExt, from = 5, to = 25, type = "period",
ofac = 100, alpha = 0.05)
lsp(gamoiSynolo)
gamoiSynolotsCompSeasonal <- seasonal(gamoiSynolotsComp)
plot(gamoiSynolotsCompSeasonal)
lsp(gamoiSynolotsCompSeasonal)
lsp(gamoiSynolotsCompSeasonal, ofac=100, type = "period")
lsp(gamoiSynolotsCompSeasonal, ofac=100, type = "period", from=1, to=5)
yTsCompSeasonal <- seasonal(yTsComp)
lsp(yTsCompSeasonal, ofac=100, type = "period", from=1, to=8)
prosdiorismosPerSyxn <- function(dedomena, apo = NULL, eos = NULL){
periodogramma <- lsp(dedomena, times = NULL, from = apo, to = eos, type = "period",
ofac = 130, alpha = 0.01, normalize="press", plot = FALSE)
per <- periodogramma$peak.at[1]
syxn <- periodogramma$peak.at[2]
Period <- c(per)
Frequency <- c(syxn)
data.frame(Period,Frequency)
}
prosdiorismosPerSyxn(SeasonalMassExt)
prosdiorismosPerSyxn(SeasonalMassExt, apo=4, eos=10)
prosdiorismosPerSyxn(gamoiSynolotsCompSeasonal)
prosdiorismosPerSyxn(gamoiSynolotsCompSeasonal, apo=1, eos=1.5)
prosdiorismosPerSyxn(gamoiSynolotsCompSeasonal, 3, 5)
seiraFourier <- function(dedomena, listPeriod){
t <- 1:length(dedomena)
n <- length(listPeriod)
T <- listPeriod[1]
seira <- paste(c("I(sin(2*pi*t/",T,"))+I(cos(2*pi*t/",T,"))"), collapse="")
if (n>1) {
for (i in 2:n) {
T <- listPeriod[i]
orosN <- paste(c("I(sin(2*pi*t/",T,"))+I(cos(2*pi*t/",T,"))"), collapse="")
seira <- paste(c(seira,orosN), collapse="+")
}
}
formula_string <- paste("dedomena ~", seira)
lm_model <- lm(as.formula(formula_string))
lm_model
}
seiraFourier(SeasonalMassExt,c(6,12))
plot(1:length(SeasonalMassExt),SeasonalMassExt)
curve(-0.0002849-8.3567745*sin(2 * pi * x/6)-4.5117178*cos(2 * pi * x/6)+12.8772886*sin(2 * pi * x/12)+6.6012389*cos(2 * pi * x/12), add = TRUE, col = "red", n=10000)
seiraFourier(gamoiSynolotsCompSeasonal,c(4/3,2,4))
seiraFourier(gamoiSynolotsCompSeasonal,c(4/3,2))
plot(1:length(gamoiSynolotsCompSeasonal),gamoiSynolotsCompSeasonal)
curve(3854*sin(2 * pi * x/(4/3))+1209*cos(2 * pi * x/(4/3))+5708*sin(2 * pi * x/2)+3414*cos(2 * pi * x/2), add = TRUE, col = "red", n=10000)
seiraFourier(seasonal(yTsComp),c(3,6))
knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
rm(list = ls())
workingHours <- read.csv("workingHours.csv")
knitr::kable(workingHours) %>%
kable_styling("striped", full_width = F) %>%
scroll_box(width = "max-content", height = "200px")
workingHours <- read.csv("workingHours.csv")
knitr::kable(head(workingHours, n=100)) %>%
kable_styling("striped", full_width = F) %>%
scroll_box(width = "max-content", height = "200px")
ergasiaGr <- workingHours[workingHours$Code == "GRC", 4]
ergasiaGr_ts <- ts(ergasiaGr, start = 1951, frequency =1)
if(!require(forecast)){
install.packages("forecast")
library(forecast)
}
ergasiaGr_arima <- auto.arima(ergasiaGr_ts, trace = TRUE)
forecast(ergasiaGr_arima, 5)
autoplot(forecast(ergasiaGr_arima, 5))
knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
rm(list = ls())
massExtDF <- read.csv("massExt.csv")
knitr::kable(massExtDF) %>%
kable_styling("striped", full_width = F) %>%
scroll_box(width = "max-content", height = "200px")
if(!require(readxl)){
install.packages("readxl")
library(readxl)
}
gamoi <- readxl::read_excel("gamoi.xlsx")
knitr::kable(gamoi) %>%
kable_styling("striped", full_width = F) %>%
scroll_box(width = "max-content", height = "200px")
massExt <- massExtDF$mass.extinction...United.States.
gamoiSynolo <- gamoi$GamoiSynolo
x <- 1:100
y <- x+6*sin( (2*pi/3) * x)-4*cos( (2*pi/6) * x)+rnorm(100)
plot(massExt, type ="l")
plot(gamoiSynolo, type ="l")
plot(y, type ="l")
if(!require(forecast)){
install.packages("forecast")
library(forecast)
}
gglagplot(massExt, continuous = TRUE, set.lags = 2*(1:10))
gglagplot(gamoiSynolo, continuous = TRUE, set.lags = 2*(1:10))
gglagplot(y, continuous = TRUE, set.lags = 2*(1:10))
acf(massExt)
acf(gamoiSynolo)
acf(y)
massExtts <- ts(massExtDF$mass.extinction...United.States., start = c(2004, 1), freq=12)
gamoiSynolots <- ts(gamoi$GamoiSynolo, start = 0, freq=4)
yTs <- ts(y, start = 0, frequency = 6)
if(!require(seastests)){
install.packages("seastests")
library(seastests)
}
isSeasonal(massExt, freq=12)
isSeasonal(massExtts)
isSeasonal(gamoiSynolo, freq=4)
isSeasonal(gamoiSynolots)
isSeasonal(y, freq=6)
isSeasonal(yTs)
isSeasonal(y, freq=7)
massExttsComp <- stl(massExtts, s.window = "periodic")
plot(massExttsComp)
SeasonalMassExt <- seasonal(massExttsComp)
plot(SeasonalMassExt)
TrendMassExt <- trendcycle(massExttsComp)
plot(TrendMassExt)
RemainderMassExt <- remainder(massExttsComp)
plot(RemainderMassExt)
gamoiSynolotsComp <- stl(gamoiSynolots, s.window = "periodic")
plot(gamoiSynolotsComp)
yTsComp <- stl(yTs, s.window = "periodic")
plot(yTsComp)
if(!require(lomb)){
install.packages("lomb")
library(lomb)
}
lsp(massExt)
lsp(SeasonalMassExt)
lsp(massExt, type = "period")
lsp(SeasonalMassExt,type = "period")
lsp(SeasonalMassExt, from = 5, to = 25, type = "period")
lsp(SeasonalMassExt, from = 5, to = 25, type = "period", alpha = 0.05)
lsp(SeasonalMassExt, from = 5, to = 25, type = "period",
ofac = 100, alpha = 0.05)
lsp(gamoiSynolo)
gamoiSynolotsCompSeasonal <- seasonal(gamoiSynolotsComp)
plot(gamoiSynolotsCompSeasonal)
lsp(gamoiSynolotsCompSeasonal)
lsp(gamoiSynolotsCompSeasonal, ofac=100, type = "period")
lsp(gamoiSynolotsCompSeasonal, ofac=100, type = "period", from=1, to=5)
yTsCompSeasonal <- seasonal(yTsComp)
lsp(yTsCompSeasonal, ofac=100, type = "period", from=1, to=8)
prosdiorismosPerSyxn <- function(dedomena, apo = NULL, eos = NULL){
periodogramma <- lsp(dedomena, times = NULL, from = apo, to = eos, type = "period",
ofac = 130, alpha = 0.01, normalize="press", plot = FALSE)
per <- periodogramma$peak.at[1]
syxn <- periodogramma$peak.at[2]
Period <- c(per)
Frequency <- c(syxn)
data.frame(Period,Frequency)
}
prosdiorismosPerSyxn(SeasonalMassExt)
prosdiorismosPerSyxn(SeasonalMassExt, apo=4, eos=10)
prosdiorismosPerSyxn(gamoiSynolotsCompSeasonal)
prosdiorismosPerSyxn(gamoiSynolotsCompSeasonal, apo=1, eos=1.5)
prosdiorismosPerSyxn(gamoiSynolotsCompSeasonal, 3, 5)
seiraFourier <- function(dedomena, listPeriod){
t <- 1:length(dedomena)
n <- length(listPeriod)
T <- listPeriod[1]
seira <- paste(c("I(sin(2*pi*t/",T,"))+I(cos(2*pi*t/",T,"))"), collapse="")
if (n>1) {
for (i in 2:n) {
T <- listPeriod[i]
orosN <- paste(c("I(sin(2*pi*t/",T,"))+I(cos(2*pi*t/",T,"))"), collapse="")
seira <- paste(c(seira,orosN), collapse="+")
}
}
formula_string <- paste("dedomena ~", seira)
lm_model <- lm(as.formula(formula_string))
lm_model
}
seiraFourier(SeasonalMassExt,c(6,12))
plot(1:length(SeasonalMassExt),SeasonalMassExt)
curve(-0.0002849-8.3567745*sin(2 * pi * x/6)-4.5117178*cos(2 * pi * x/6)+12.8772886*sin(2 * pi * x/12)+6.6012389*cos(2 * pi * x/12), add = TRUE, col = "red", n=10000)
seiraFourier(gamoiSynolotsCompSeasonal,c(4/3,2,4))
seiraFourier(gamoiSynolotsCompSeasonal,c(4/3,2))
plot(1:length(gamoiSynolotsCompSeasonal),gamoiSynolotsCompSeasonal)
curve(3854*sin(2 * pi * x/(4/3))+1209*cos(2 * pi * x/(4/3))+5708*sin(2 * pi * x/2)+3414*cos(2 * pi * x/2), add = TRUE, col = "red", n=10000)
seiraFourier(seasonal(yTsComp),c(3,6))
plot(1:length(SeasonalMassExt),SeasonalMassExt, type = "l")
curve(-0.0002849-8.3567745*sin(2 * pi * x/6)-4.5117178*cos(2 * pi * x/6)+12.8772886*sin(2 * pi * x/12)+6.6012389*cos(2 * pi * x/12), add = TRUE, col = "red", n=10000)
plot(1:length(gamoiSynolotsCompSeasonal),gamoiSynolotsCompSeasonal, type= "l")
curve(3854*sin(2 * pi * x/(4/3))+1209*cos(2 * pi * x/(4/3))+5708*sin(2 * pi * x/2)+3414*cos(2 * pi * x/2), add = TRUE, col = "red", n=10000)
3.854e+03
-4.972e-04
1.209e+03
seiraFourier(gamoiSynolotsCompSeasonal,c(4,2))
seiraFourier(gamoiSynolotsCompSeasonal,c(2,4))
plot(1:length(gamoiSynolotsCompSeasonal),gamoiSynolotsCompSeasonal, type= "l")
curve(-3854*sin(2 * pi * x/(4))+1209*cos(2 * pi * x/(4/3))-692.7*sin(2 * pi * x/2)+3414*cos(2 * pi * x/2), add = TRUE, col = "red", n=10000)
seiraFourier(gamoiSynolotsCompSeasonal,c(2,4))
plot(1:length(gamoiSynolotsCompSeasonal),gamoiSynolotsCompSeasonal, type= "l")
curve(-3854*sin(2 * pi * x/(4))+1209*cos(2 * pi * x/(4/3))-692.7*sin(2 * pi * x/2)+3414*cos(2 * pi * x/2), add = TRUE, col = "red", n=10000)
plot(1:length(gamoiSynolotsCompSeasonal),gamoiSynolotsCompSeasonal, type= "l")
curve(-3854*sin(2 * pi * x/(4))+1209*cos(2 * pi * x/(4))-692.7*sin(2 * pi * x/2)+3414*cos(2 * pi * x/2), add = TRUE, col = "red", n=10000)
seiraFourier(gamoiSynolotsCompSeasonal,c(4/3,2))
plot(1:length(gamoiSynolotsCompSeasonal),gamoiSynolotsCompSeasonal, type= "l")
curve(-3854*sin(2 * pi * x/4)+1209*cos(2 * pi * x/4)-692.7*sin(2 * pi * x/2)+3414*cos(2 * pi * x/2), add = TRUE, col = "red", n=10000)
seiraFourier(gamoiSynolotsCompSeasonal,c(4/3,2))
seiraFourier(gamoiSynolotsCompSeasonal,c(1.333,2,4))
plot(1:length(gamoiSynolotsCompSeasonal),gamoiSynolotsCompSeasonal, type= "l")
curve(-3854*sin(2 * pi * x/(4))+1209*cos(2 * pi * x/(4/3))-1063*sin(2 * pi * x/2)+3414*cos(2 * pi * x/2), add = TRUE, col = "red", n=10000)
knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
rm(list = ls())
if(!require(readxl)){
install.packages("readxl")
library(readxl)
}
enaerParab <- readxl::read_excel("enaerParab.xlsx")
knitr::kable(enaerParab) %>%
kable_styling("striped", full_width = F) %>%
scroll_box(width = "100%", height = "200px")
if(!require(readxl)){
install.packages("readxl")
library(readxl)
}
enaerParab <- readxl::read_excel("enaerParab.xlsx")
knitr::kable(enaerParab) %>%
kable_styling("striped", full_width = F) %>%
scroll_box(width = "100%", height = "200px")
e_a <- enaerParab[enaerParab$ETOS == 2009, -c(1,8)]
e_aKALOK <- e_a[6:8,]
if(!require(fmsb)){
install.packages("fmsb")
library(fmsb)
}
if(!require(fmsb)){
install.packages("fmsb")
library(fmsb)
}
if(!require(fmsb)){
install.packages("fmsb")
library(fmsb)
}
astrogramma1 <- function(dedomena, xroma = rainbow(length(dedomena[,1])),
vlabels = colnames(dedomena)[-1], vlcex = 0.7, title = NULL, ...){
m <- min(dedomena[,-1])
M <- max(dedomena[,-1])
n <- length(dedomena[1,])
m_row <- rep(m, n-1)
M_row <- rep(M, n-1)
max_min <- rbind(M_row, m_row)
rownames(max_min) <- c("Max", "Min")
rownames(dedomena) <- dedomena[,1]
data <- dedomena[,-1]
colnames(max_min) <- colnames(data)
data <- rbind(max_min,data)
radarchart(
data, axistype = 1,
# Customize the polygon
pcol = xroma, pfcol = scales::alpha(xroma, 0.5), plwd = 2, plty = 1,
# Customize the grid
cglcol = "grey", cglty = 1, cglwd = 0.8,
# Customize the axis
axislabcol = "grey",
# Variable labels
vlcex = vlcex, vlabels = vlabels,
caxislabels = (0:5)*(M/5), title = title, ...
)
for (k in 1:length(data[,1])){
rn <- dedomena[k,1]
mtext(rn, side = 1, line = k-1, col = xroma[k], adj = 0.5)
}
}
astrogramma <- function(dedomena, mazi = T, xroma = rainbow(length(dedomena[,1])),
vlabels = colnames(dedomena)[-1], vlcex = 0.7, title = NULL, ...) {
if (mazi) {
astrogramma1(dedomena, xroma,
vlabels, vlcex, title, ...)
} else {
op <- par(mar = c(1, 1, 1, 1))
par(mfrow = c(3,2))
nn <- length(dedomena[,1])
for (i in 1:nn){
df0 <- dedomena[i,]
astrogramma1(df0, xroma = rainbow(nn)[i])
}
par(op)
}
}
astrogramma(e_aKALOK)
e_aKALOK_PD <- as.data.frame(e_aKALOK)
astrogramma(e_aKALOK_PD)
astrogramma(e_aKALOK_PD, FALSE)
astrogramma(e_a)
e_a_PD <- as.data.frame(e_a)
e_a_PD <- as.data.frame(e_a)
astrogramma(e_a_PD)
astrogramma(e_a_PD, FALSE)
