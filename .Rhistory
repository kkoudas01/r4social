print(y_reconstructed)
plot(y_reconstructed)
lm(y ~ I(sin(2*pi*tPoints/(4/3)))+I(cos(2*pi*tPoints/(4/3)))+I(sin(2*pi*tPoints/(4)))+I(cos(2*pi*tPoints/(4)))+I(sin(2*pi*tPoints/(2)))+I(cos(2*pi*tPoints/(2))))
plot(y)
y
y
# Φόρτωση της λίστας τιμών y
h <- 0.1
t <- (1:1000)*h
y <-  sin(t)+5cos(2*t) # Συμπληρώστε με τις τιμές της λίστας
# Ο αριθμός των όρων της σειράς Fourier που θέλουμε
n <- 5  # Συμπληρώστε με τον επιθυμητό αριθμό όρων
# Υπολογισμός του μήκους της λίστας y
N <- length(y)
# Εφαρμογή του FFT
Y_fft <- fft(y)
# Υπολογισμός των συντελεστών
a0 <- Re(Y_fft[1]) / N
a <- 2 * Re(Y_fft[2:(n+1)]) / N
b <- -2 * Im(Y_fft[2:(n+1)]) / N
# Εκτύπωση των συντελεστών
cat("Συντελεστές της σειράς Fourier:\n")
cat("a0 (συντελεστής της σταθεράς):", a0, "\n")
for (k in 1:n) {
cat("a", k, "(συντελεστής του cos(", k, "*x)):", a[k], "\n")
cat("b", k, "(συντελεστής του sin(", k, "*x)):", b[k], "\n")
}
plot(y)
# Φόρτωση της λίστας τιμών y
h <- 0.1
t <- (1:1000)*h
y <-  sin(t)+5cos(2*t) # Συμπληρώστε με τις τιμές της λίστας
y <-  sin(t)+5*cos(2*t) # Συμπληρώστε με τις τιμές της λίστας
plot(y)
plot(y, line)
plot(y, "l")
# Φόρτωση της λίστας τιμών y
h <- 0.1
t <- (1:1000)*h
y <-  sin(t)+5*cos(2*t) # Συμπληρώστε με τις τιμές της λίστας
plot(y, type = "l")
# Ο αριθμός των όρων της σειράς Fourier που θέλουμε
n <- 5  # Συμπληρώστε με τον επιθυμητό αριθμό όρων
# Υπολογισμός του μήκους της λίστας y
N <- length(y)
# Εφαρμογή του FFT
Y_fft <- fft(y)
# Υπολογισμός των συντελεστών
a0 <- Re(Y_fft[1]) / N
a <- 2 * Re(Y_fft[2:(n+1)]) / N
b <- -2 * Im(Y_fft[2:(n+1)]) / N
# Εκτύπωση των συντελεστών
cat("Συντελεστές της σειράς Fourier:\n")
cat("a0 (συντελεστής της σταθεράς):", a0, "\n")
for (k in 1:n) {
cat("a", k, "(συντελεστής του cos(", k, "*x)):", a[k], "\n")
cat("b", k, "(συντελεστής του sin(", k, "*x)):", b[k], "\n")
}
pi
y <-  sin(pi*t)+5*cos(2*pi*t/2) # Συμπληρώστε με τις τιμές της λίστας
plot(y, type = "l")
# Ο αριθμός των όρων της σειράς Fourier που θέλουμε
n <- 5  # Συμπληρώστε με τον επιθυμητό αριθμό όρων
# Υπολογισμός του μήκους της λίστας y
N <- length(y)
# Εφαρμογή του FFT
Y_fft <- fft(y)
# Υπολογισμός των συντελεστών
a0 <- Re(Y_fft[1]) / N
a <- 2 * Re(Y_fft[2:(n+1)]) / N
b <- -2 * Im(Y_fft[2:(n+1)]) / N
# Εκτύπωση των συντελεστών
cat("Συντελεστές της σειράς Fourier:\n")
cat("a0 (συντελεστής της σταθεράς):", a0, "\n")
for (k in 1:n) {
cat("a", k, "(συντελεστής του cos(", k, "*x)):", a[k], "\n")
cat("b", k, "(συντελεστής του sin(", k, "*x)):", b[k], "\n")
}
# Ανασύνθεση του σήματος χρησιμοποιώντας τους n όρους της σειράς Fourier
y_reconstructed <- a0 + rowSums(sapply(1:n, function(k) {
a[k] * cos(2 * pi * (k-1) * (0:(N-1)) / N) + b[k] * sin(2 * pi * (k-1) * (0:(N-1)) / N)
}))
# Εκτύπωση των αποτελεσμάτων
cat("Αρχικό σήμα: \n")
print(y)
# Εκτύπωση των συντελεστών
cat("Συντελεστές της σειράς Fourier:\n")
cat("a0 (συντελεστής της σταθεράς):", a0, "\n")
for (k in 1:n) {
cat("a", k, "(συντελεστής του cos(", k, "*x)):", a[k], "\n")
cat("b", k, "(συντελεστής του sin(", k, "*x)):", b[k], "\n")
}
install.packages(c("cli", "rlang", "stringi", "yaml"))
install.packages("knitr")
install.packages("knitr")
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages(c("evaluate", "highr", "markdown", "stringr", "yaml", "htmltools", "caTools", "bitops", "rprojroot"))
install.packages(c("evaluate", "highr", "markdown", "stringr", "yaml", "htmltools", "caTools", "bitops", "rprojroot"))
install.packages("devtools")
devtools::install_github("r-lib/evaluate")
remove.packages("knitr")
remove.packages("rmarkdown")
install.packages("knitr")
install.packages("knitr")
install.packages("rmarkdown")
install.packages("rmarkdown")
packageVersion("knitr")
update.packages("knitr")
rmarkdown::render("test.Rmd")
devtools::install_github('mages/googleVis')
devtools::install_github("yihui/knitr")
install.packages("rlang")
install.packages("rlang")
install.packages(c("cli", "yaml"))
remove.packages("yaml")
remove.packages("cli")
instal.packages("cli")
install.packages("cli")
install.packages("yaml")
remove.packages(yaml)
remove.packages("yaml")
library(devtools)
install_version("yaml", version = "1.2.2")
install_version("yaml", version = "1.2")
install_version("yaml", version = "2.3.9")
remove.packages("yaml")
install_version("yaml", version = "2.3.9")
.libPaths()
remove.packages("yaml")
install.packages("yaml")
install.packages("RcppParallel")
$ 502:  pandoc -v
pandoc -v
which pandoc
which pandoc pandoc -v
library(rmarkdown)
sessionInfo()
rm .Renviron
rmarkdown::render_site()
install.packages('coin')
rmarkdown::render_site()
knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
rm(list = ls())
if(!require(readxl)){
install.packages("readxl")
library(readxl)
}
simetoxiN_EU <- readxl::read_excel("simetoxiN_EU.xlsx", na="NA")
knitr::kable(simetoxiN_EU) %>%
kable_styling("striped", full_width = F) %>%
scroll_box(width = "100%", height = "200px")
# Πλήθη
apoxi <- simetoxiN_EU$EGGEGRAMMENOI-simetoxiN_EU$PSIFISAN
simetoxiN_EU$APOXI_p <- apoxi/simetoxiN_EU$EGGEGRAMMENOI
#simetoxiEU <- simetoxiN_EU[simetoxiN_EU$EIDOS_EKLOGON == "EU", ]
#simetoxiN <- simetoxiN_EU[simetoxiN_EU$EIDOS_EKLOGON == "bouleftikes", ]
#apoxiEU <- simetoxiEU$EGGEGRAMMENOI-simetoxiEU$PSIFISAN
#apoxiN <- simetoxiN$EGGEGRAMMENOI-simetoxiN$PSIFISAN
akira <- simetoxiN_EU$AKIRA
#akiraEU <- simetoxiEU$AKIRA
#akiraN <- simetoxiN$AKIRA
lefka <- simetoxiN_EU$LEFKA
#lefkaEU <- simetoxiEU$LEFKA
#lefkaN <- simetoxiN$LEFKA
akiro_lefko <- simetoxiN_EU$AKIRO_LEFKO
#akiro_lefkoEU <- simetoxiEU$AKIRO_LEFKO
#akiro_lefkoN <- simetoxiN$AKIRO_LEFKO
# Ποσοστά
apoxi_p <- simetoxiN_EU$APOXI_p
#apoxiEU_p <- simetoxiEU$APOXI_p
#apoxiN_p <- simetoxiN$APOXI_p
akira_p <- simetoxiN_EU$AKIRA_p
#akiraEU_p <- simetoxiEU$AKIRA_p
#akiraN_p <- simetoxiN$AKIRA_p
lefka_p <- simetoxiN_EU$LEFKA_p
#lefkaEU_p <- simetoxiEU$LEFKA_p
#lefkaN_p <- simetoxiN$LEFKA_p
akiro_lefko_p <- simetoxiN_EU$AKIRO_LEFKO_p
#akiro_lefkoEU_p <- simetoxiEU$AKIRO_LEFKO_p
#akiro_lefkoN_p <- simetoxiN$AKIRO_LEFKO_p
kruskal.test(APOXI_p ~ EIDOS_EKLOGON, data = simetoxiN_EU)
kruskal.test(AKIRA_p ~ EIDOS_EKLOGON, data = simetoxiN_EU)
kruskal.test(LEFKA_p ~ EIDOS_EKLOGON, data = simetoxiN_EU)
kruskal.test(AKIRO_LEFKO_p ~ EIDOS_EKLOGON, data = simetoxiN_EU)
kruskal.test(APOXI_p ~ EPOXI, data = simetoxiN_EU)
plot(simetoxiN_EU$ETOS, apoxi_p, type = "l")
par( mfrow= c(1,2) )
plot(simetoxiN_EU$ETOS, akira_p, type = "l")
plot(simetoxiN_EU$ETOS, lefka_p, type = "l")
plot(simetoxiN_EU$ETOS, akiro_lefko_p, type = "l")
if(!require(ggplot2)){
install.packages("ggplot2")
library(ggplot2)
}
AkiraApoxiEyth <- ggplot(simetoxiN_EU, aes(x = APOXI_p, y = AKIRA_p))
AkiraApoxiEyth + geom_smooth(method='lm') + geom_point()
summary(lm(akira_p ~ apoxi_p))
LefkaApoxiEyth <- ggplot(simetoxiN_EU, aes(x = APOXI_p, y = LEFKA_p))
LefkaApoxiEyth + geom_smooth(method='lm') + geom_point()
LefkaApoxiEyth <- ggplot(simetoxiN_EU, aes(x = APOXI_p, y = LEFKA_p))
LefkaApoxiEyth + geom_smooth(method='lm') + geom_point()
summary(lm(lefka_p ~ apoxi_p))
LefkaApoxiEyth <- ggplot(simetoxiN_EU, aes(x = APOXI_p, y = LEFKA_p))
LefkaApoxiEyth + geom_smooth(method='lm') + geom_point()
summary(lm(lefka_p ~ apoxi_p))
Akiro_LefkoApoxiEyth <- ggplot(simetoxiN_EU, aes(x = APOXI_p, y = AKIRO_LEFKO_p))
Akiro_LefkoApoxiEyth + geom_smooth(method='lm') + geom_point()
AkiroLefkoEyth <- ggplot(simetoxiN_EU, aes(x = LEFKA_p, y = AKIRA_p))
AkiroLefkoEyth + geom_smooth(method='lm') + geom_point()
summary(lm(lefka_p ~ akira_p))
knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
rm(list = ls())
if(!require(readxl)){
install.packages("readxl")
library(readxl)
}
simetoxiN_EU <- readxl::read_excel("simetoxiN_EU.xlsx", na="NA")
knitr::kable(simetoxiN_EU) %>%
kable_styling("striped", full_width = F) %>%
scroll_box(width = "100%", height = "200px")
# Πλήθη
apoxi <- simetoxiN_EU$EGGEGRAMMENOI-simetoxiN_EU$PSIFISAN
simetoxiN_EU$APOXI_p <- apoxi/simetoxiN_EU$EGGEGRAMMENOI
#simetoxiEU <- simetoxiN_EU[simetoxiN_EU$EIDOS_EKLOGON == "EU", ]
#simetoxiN <- simetoxiN_EU[simetoxiN_EU$EIDOS_EKLOGON == "bouleftikes", ]
#apoxiEU <- simetoxiEU$EGGEGRAMMENOI-simetoxiEU$PSIFISAN
#apoxiN <- simetoxiN$EGGEGRAMMENOI-simetoxiN$PSIFISAN
akira <- simetoxiN_EU$AKIRA
#akiraEU <- simetoxiEU$AKIRA
#akiraN <- simetoxiN$AKIRA
lefka <- simetoxiN_EU$LEFKA
#lefkaEU <- simetoxiEU$LEFKA
#lefkaN <- simetoxiN$LEFKA
akiro_lefko <- simetoxiN_EU$AKIRO_LEFKO
#akiro_lefkoEU <- simetoxiEU$AKIRO_LEFKO
#akiro_lefkoN <- simetoxiN$AKIRO_LEFKO
# Ποσοστά
apoxi_p <- simetoxiN_EU$APOXI_p
#apoxiEU_p <- simetoxiEU$APOXI_p
#apoxiN_p <- simetoxiN$APOXI_p
akira_p <- simetoxiN_EU$AKIRA_p
#akiraEU_p <- simetoxiEU$AKIRA_p
#akiraN_p <- simetoxiN$AKIRA_p
lefka_p <- simetoxiN_EU$LEFKA_p
#lefkaEU_p <- simetoxiEU$LEFKA_p
#lefkaN_p <- simetoxiN$LEFKA_p
akiro_lefko_p <- simetoxiN_EU$AKIRO_LEFKO_p
#akiro_lefkoEU_p <- simetoxiEU$AKIRO_LEFKO_p
#akiro_lefkoN_p <- simetoxiN$AKIRO_LEFKO_p
kruskal.test(APOXI_p ~ EIDOS_EKLOGON, data = simetoxiN_EU)
kruskal.test(AKIRA_p ~ EIDOS_EKLOGON, data = simetoxiN_EU)
kruskal.test(LEFKA_p ~ EIDOS_EKLOGON, data = simetoxiN_EU)
kruskal.test(AKIRO_LEFKO_p ~ EIDOS_EKLOGON, data = simetoxiN_EU)
kruskal.test(APOXI_p ~ EPOXI, data = simetoxiN_EU)
plot(simetoxiN_EU$ETOS, apoxi_p, type = "l")
par( mfrow= c(1,2) )
plot(simetoxiN_EU$ETOS, akira_p, type = "l")
plot(simetoxiN_EU$ETOS, lefka_p, type = "l")
plot(simetoxiN_EU$ETOS, akiro_lefko_p, type = "l")
if(!require(ggplot2)){
install.packages("ggplot2")
library(ggplot2)
}
AkiraApoxiEyth <- ggplot(simetoxiN_EU, aes(x = APOXI_p, y = AKIRA_p))
AkiraApoxiEyth + geom_smooth(method='lm') + geom_point()
summary(lm(akira_p ~ apoxi_p))
LefkaApoxiEyth <- ggplot(simetoxiN_EU, aes(x = APOXI_p, y = LEFKA_p))
LefkaApoxiEyth + geom_smooth(method='lm') + geom_point()
summary(lm(lefka_p ~ apoxi_p))
Akiro_LefkoApoxiEyth <- ggplot(simetoxiN_EU, aes(x = APOXI_p, y = AKIRO_LEFKO_p))
Akiro_LefkoApoxiEyth + geom_smooth(method='lm') + geom_point()
summary(lm(akiro_lefko_p ~ apoxi_p))
AkiroLefkoEyth <- ggplot(simetoxiN_EU, aes(x = LEFKA_p, y = AKIRA_p))
AkiroLefkoEyth + geom_smooth(method='lm') + geom_point()
summary(lm(lefka_p ~ akira_p))
plithismosGR <- c(9308479, 9729350, 9729350, 9895801, 9934300, 10089498, 10089498, 10089498, 10196792, 10460415, 10512922, 10608800, 10761698, 10805808, 10955141, 10955141, 11048473, 11107017, 11107017, 11045011, 11045011, 10892413, 10820883, 10820883, 10721582, 10721582, 10432481, 10432481)
simetoxiN_EU$PLITHISMOS <- plithismosGR
plithismosGR1976 <- c(9188150, 9308479, 9729350, 9729350, 9895801, 9934300, 10089498, 10089498, 10089498, 10196792, 10460415, 10512922, 10608800, 10761698, 10805808, 10955141, 10955141, 11048473, 11107017, 11107017, 11045011, 11045011, 10892413, 10820883, 10820883, 10721582, 10721582, 10432481, 10432481)
plithismosGRd <- diff(plithismosGR1976)
simetoxiN_EU$PLITHISMOSd <- plithismosGRd
ApoxiMetaboliKampili <- ggplot(simetoxiN_EU, aes(x = PLITHISMOSd, y = APOXI_p))
ApoxiMetaboliKampili + geom_point() + geom_smooth()
length(apoxi_p)
thetiki_metaboli <- rep("Y", length(apoxi_p))
for (i in 1:length(apoxi_p)) {
if (plithismosGRd[i] < 0) {
thetiki_metaboli[i] <- "N"
}
}
simetoxiN_EU$THETIKI_METABOLI <- thetiki_metaboli
kruskal.test(APOXI_p ~ THETIKI_METABOLI, data = simetoxiN_EU)
par( mfrow= c(1,2) )
AkiroMetaboliKampili <- ggplot(simetoxiN_EU, aes(x = PLITHISMOSd, y = AKIRA_p))
AkiroMetaboliKampili + geom_point() + geom_smooth()
LefkoMetaboliKampili <- ggplot(simetoxiN_EU, aes(x = PLITHISMOSd, y = LEFKA_p))
LefkoMetaboliKampili + geom_point() + geom_smooth()
kruskal.test(AKIRA_p ~ THETIKI_METABOLI, data = simetoxiN_EU)
kruskal.test(LEFKA_p ~ THETIKI_METABOLI, data = simetoxiN_EU)
kruskal.test(AKIRA_p ~ THETIKI_METABOLI, data = simetoxiN_EU)
kruskal.test(LEFKA_p ~ THETIKI_METABOLI, data = simetoxiN_EU)
kruskal.test(AKYRA_LEFKA_p ~ THETIKI_METABOLI, data = simetoxiN_EU)
kruskal.test(AKIRA_p ~ THETIKI_METABOLI, data = simetoxiN_EU)
kruskal.test(LEFKA_p ~ THETIKI_METABOLI, data = simetoxiN_EU)
kruskal.test(AKIRO_LEFKO_p ~ THETIKI_METABOLI, data = simetoxiN_EU)
kruskal.test(AKIRA_p ~ THETIKI_METABOLI, data = simetoxiN_EU)
kruskal.test(LEFKA_p ~ THETIKI_METABOLI, data = simetoxiN_EU)
Akiro_LefkoMetaboliKampili <- ggplot(simetoxiN_EU, aes(x = PLITHISMOSd, y = AKIRO_LEFKO_p))
Akiro_LefkoMetaboliKampili + geom_point() + geom_smooth()
kruskal.test(AKIRO_LEFKO_p ~ THETIKI_METABOLI, data = simetoxiN_EU)
AkiroMetaboliKampili <- ggplot(simetoxiN_EU, aes(x = PLITHISMOSd, y = AKIRA_p))
LefkoMetaboliKampili <- ggplot(simetoxiN_EU, aes(x = PLITHISMOSd, y = LEFKA_p))
AkiroMetaboliKampili + geom_point() + geom_smooth()
LefkoMetaboliKampili + geom_point() + geom_smooth()
eggegrammeni_ts <- ts(simetoxiN_EU$EGGEGRAMMENOI, start = 1, frequency =1)
psifisan_ts <- ts(simetoxiN_EU$PSIFISAN, start = 1, frequency =1)
apoxi_ts <- eggegrammeni_ts-psifisan_ts
akira_ts <- ts(simetoxiN_EU$AKIRA, start = 1, frequency =1)
lefka_ts <- ts(simetoxiN_EU$LEFKA, start = 1, frequency =1)
library(forecast)
eggegrammeni_arima <- auto.arima(eggegrammeni_ts, trace = TRUE)
psifisan_arima <- auto.arima(psifisan_ts, trace = TRUE)
apoxi_arima <- auto.arima(apoxi_ts, trace = TRUE)
akira_arima <- auto.arima(akira_ts, trace = TRUE)
lefka_arima <- auto.arima(lefka_ts, trace = TRUE)
eggegrammeni_l <- forecast(eggegrammeni_arima, 5)$lower
eggegrammeni_u <- forecast(eggegrammeni_arima, 5)$upper
psifisan_l <- forecast(psifisan_arima, 5)$lower
psifisan_u <- forecast(psifisan_arima, 5)$upper
apoxi_l <- forecast(apoxi_arima, 5)$lower
apoxi_u <- forecast(apoxi_arima, 5)$upper
akira_l <- forecast(akira_arima, 5)$lower
akira_u <- forecast(akira_arima, 5)$upper
lefka_l <- forecast(lefka_arima, 5)$lower
lefka_u <- forecast(lefka_arima, 5)$upper
apoxiP_l <- 100*round(apoxi_l[,1]/eggegrammeni_u[,1], digits = 3)
apoxiP_u <- 100*round(apoxi_u[,1]/eggegrammeni_l[,1], digits = 3)
akiraP_l <- 100*round(akira_l[,1]/psifisan_u[,1], digits = 3)
akiraP_u <- 100*round(akira_u[,1]/psifisan_l[,1], digits = 3)
lefkaP_l <- 100*round(lefka_l[,1]/psifisan_u[,1], digits = 3)
lefkaP_u <- 100*round(lefka_u[,1]/psifisan_l[,1], digits = 3)
problepsisdf <- data.frame(
ΑΠΟΧΗ = paste("[", apoxiP_l, "%, ", apoxiP_u, "%]", sep = ""),
ΑΚΥΡΟ = paste("[", akiraP_l, "%, ",  akiraP_u, "%]", sep = ""),
ΛΕΥΚΟ = paste("[", lefkaP_l, "%, ",  lefkaP_u, "%]", sep = "")
)
problepsisdf
knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
rm(list = ls())
if(!require(readxl)){
install.packages("readxl")
library(readxl)
}
simetoxiN_EU <- readxl::read_excel("simetoxiN_EU.xlsx", na="NA")
knitr::kable(simetoxiN_EU) %>%
kable_styling("striped", full_width = F) %>%
scroll_box(width = "100%", height = "200px")
# Πλήθη
apoxi <- simetoxiN_EU$EGGEGRAMMENOI-simetoxiN_EU$PSIFISAN
simetoxiN_EU$APOXI_p <- apoxi/simetoxiN_EU$EGGEGRAMMENOI
#simetoxiEU <- simetoxiN_EU[simetoxiN_EU$EIDOS_EKLOGON == "EU", ]
#simetoxiN <- simetoxiN_EU[simetoxiN_EU$EIDOS_EKLOGON == "bouleftikes", ]
#apoxiEU <- simetoxiEU$EGGEGRAMMENOI-simetoxiEU$PSIFISAN
#apoxiN <- simetoxiN$EGGEGRAMMENOI-simetoxiN$PSIFISAN
akira <- simetoxiN_EU$AKIRA
#akiraEU <- simetoxiEU$AKIRA
#akiraN <- simetoxiN$AKIRA
lefka <- simetoxiN_EU$LEFKA
#lefkaEU <- simetoxiEU$LEFKA
#lefkaN <- simetoxiN$LEFKA
akiro_lefko <- simetoxiN_EU$AKIRO_LEFKO
#akiro_lefkoEU <- simetoxiEU$AKIRO_LEFKO
#akiro_lefkoN <- simetoxiN$AKIRO_LEFKO
# Ποσοστά
apoxi_p <- simetoxiN_EU$APOXI_p
#apoxiEU_p <- simetoxiEU$APOXI_p
#apoxiN_p <- simetoxiN$APOXI_p
akira_p <- simetoxiN_EU$AKIRA_p
#akiraEU_p <- simetoxiEU$AKIRA_p
#akiraN_p <- simetoxiN$AKIRA_p
lefka_p <- simetoxiN_EU$LEFKA_p
#lefkaEU_p <- simetoxiEU$LEFKA_p
#lefkaN_p <- simetoxiN$LEFKA_p
akiro_lefko_p <- simetoxiN_EU$AKIRO_LEFKO_p
#akiro_lefkoEU_p <- simetoxiEU$AKIRO_LEFKO_p
#akiro_lefkoN_p <- simetoxiN$AKIRO_LEFKO_p
kruskal.test(APOXI_p ~ EIDOS_EKLOGON, data = simetoxiN_EU)
kruskal.test(AKIRA_p ~ EIDOS_EKLOGON, data = simetoxiN_EU)
kruskal.test(LEFKA_p ~ EIDOS_EKLOGON, data = simetoxiN_EU)
kruskal.test(AKIRO_LEFKO_p ~ EIDOS_EKLOGON, data = simetoxiN_EU)
kruskal.test(APOXI_p ~ EPOXI, data = simetoxiN_EU)
plot(simetoxiN_EU$ETOS, apoxi_p, type = "l")
par( mfrow= c(1,2) )
plot(simetoxiN_EU$ETOS, akira_p, type = "l")
plot(simetoxiN_EU$ETOS, lefka_p, type = "l")
plot(simetoxiN_EU$ETOS, akiro_lefko_p, type = "l")
if(!require(ggplot2)){
install.packages("ggplot2")
library(ggplot2)
}
AkiraApoxiEyth <- ggplot(simetoxiN_EU, aes(x = APOXI_p, y = AKIRA_p))
AkiraApoxiEyth + geom_smooth(method='lm') + geom_point()
summary(lm(akira_p ~ apoxi_p))
LefkaApoxiEyth <- ggplot(simetoxiN_EU, aes(x = APOXI_p, y = LEFKA_p))
LefkaApoxiEyth + geom_smooth(method='lm') + geom_point()
summary(lm(lefka_p ~ apoxi_p))
Akiro_LefkoApoxiEyth <- ggplot(simetoxiN_EU, aes(x = APOXI_p, y = AKIRO_LEFKO_p))
Akiro_LefkoApoxiEyth + geom_smooth(method='lm') + geom_point()
summary(lm(akiro_lefko_p ~ apoxi_p))
AkiroLefkoEyth <- ggplot(simetoxiN_EU, aes(x = LEFKA_p, y = AKIRA_p))
AkiroLefkoEyth + geom_smooth(method='lm') + geom_point()
summary(lm(lefka_p ~ akira_p))
plithismosGR <- c(9308479, 9729350, 9729350, 9895801, 9934300, 10089498, 10089498, 10089498, 10196792, 10460415, 10512922, 10608800, 10761698, 10805808, 10955141, 10955141, 11048473, 11107017, 11107017, 11045011, 11045011, 10892413, 10820883, 10820883, 10721582, 10721582, 10432481, 10432481)
simetoxiN_EU$PLITHISMOS <- plithismosGR
plithismosGR1976 <- c(9188150, 9308479, 9729350, 9729350, 9895801, 9934300, 10089498, 10089498, 10089498, 10196792, 10460415, 10512922, 10608800, 10761698, 10805808, 10955141, 10955141, 11048473, 11107017, 11107017, 11045011, 11045011, 10892413, 10820883, 10820883, 10721582, 10721582, 10432481, 10432481)
plithismosGRd <- diff(plithismosGR1976)
simetoxiN_EU$PLITHISMOSd <- plithismosGRd
ApoxiMetaboliKampili <- ggplot(simetoxiN_EU, aes(x = PLITHISMOSd, y = APOXI_p))
ApoxiMetaboliKampili + geom_point() + geom_smooth()
thetiki_metaboli <- rep("Y", length(apoxi_p))
for (i in 1:length(apoxi_p)) {
if (plithismosGRd[i] < 0) {
thetiki_metaboli[i] <- "N"
}
}
simetoxiN_EU$THETIKI_METABOLI <- thetiki_metaboli
kruskal.test(APOXI_p ~ THETIKI_METABOLI, data = simetoxiN_EU)
AkiroMetaboliKampili <- ggplot(simetoxiN_EU, aes(x = PLITHISMOSd, y = AKIRA_p))
LefkoMetaboliKampili <- ggplot(simetoxiN_EU, aes(x = PLITHISMOSd, y = LEFKA_p))
AkiroMetaboliKampili + geom_point() + geom_smooth()
LefkoMetaboliKampili + geom_point() + geom_smooth()
kruskal.test(AKIRA_p ~ THETIKI_METABOLI, data = simetoxiN_EU)
kruskal.test(LEFKA_p ~ THETIKI_METABOLI, data = simetoxiN_EU)
Akiro_LefkoMetaboliKampili <- ggplot(simetoxiN_EU, aes(x = PLITHISMOSd, y = AKIRO_LEFKO_p))
Akiro_LefkoMetaboliKampili + geom_point() + geom_smooth()
kruskal.test(AKIRO_LEFKO_p ~ THETIKI_METABOLI, data = simetoxiN_EU)
eggegrammeni_ts <- ts(simetoxiN_EU$EGGEGRAMMENOI, start = 1, frequency =1)
psifisan_ts <- ts(simetoxiN_EU$PSIFISAN, start = 1, frequency =1)
apoxi_ts <- eggegrammeni_ts-psifisan_ts
akira_ts <- ts(simetoxiN_EU$AKIRA, start = 1, frequency =1)
lefka_ts <- ts(simetoxiN_EU$LEFKA, start = 1, frequency =1)
if(!require(forecast)){
install.packages("forecast")
library(forecast)
}
eggegrammeni_arima <- auto.arima(eggegrammeni_ts, trace = TRUE)
psifisan_arima <- auto.arima(psifisan_ts, trace = TRUE)
apoxi_arima <- auto.arima(apoxi_ts, trace = TRUE)
akira_arima <- auto.arima(akira_ts, trace = TRUE)
lefka_arima <- auto.arima(lefka_ts, trace = TRUE)
eggegrammeni_l <- forecast(eggegrammeni_arima, 5)$lower
eggegrammeni_u <- forecast(eggegrammeni_arima, 5)$upper
psifisan_l <- forecast(psifisan_arima, 5)$lower
psifisan_u <- forecast(psifisan_arima, 5)$upper
apoxi_l <- forecast(apoxi_arima, 5)$lower
apoxi_u <- forecast(apoxi_arima, 5)$upper
akira_l <- forecast(akira_arima, 5)$lower
akira_u <- forecast(akira_arima, 5)$upper
lefka_l <- forecast(lefka_arima, 5)$lower
lefka_u <- forecast(lefka_arima, 5)$upper
apoxiP_l <- 100*round(apoxi_l[,1]/eggegrammeni_u[,1], digits = 3)
apoxiP_u <- 100*round(apoxi_u[,1]/eggegrammeni_l[,1], digits = 3)
akiraP_l <- 100*round(akira_l[,1]/psifisan_u[,1], digits = 3)
akiraP_u <- 100*round(akira_u[,1]/psifisan_l[,1], digits = 3)
lefkaP_l <- 100*round(lefka_l[,1]/psifisan_u[,1], digits = 3)
lefkaP_u <- 100*round(lefka_u[,1]/psifisan_l[,1], digits = 3)
problepsisdf <- data.frame(
ΑΠΟΧΗ = paste("[", apoxiP_l, "%, ", apoxiP_u, "%]", sep = ""),
ΑΚΥΡΟ = paste("[", akiraP_l, "%, ",  akiraP_u, "%]", sep = ""),
ΛΕΥΚΟ = paste("[", lefkaP_l, "%, ",  lefkaP_u, "%]", sep = "")
)
problepsisdf
eggegrammeni_ts <- ts(simetoxiN_EU$EGGEGRAMMENOI, start = 1, frequency =1)
psifisan_ts <- ts(simetoxiN_EU$PSIFISAN, start = 1, frequency =1)
apoxi_ts <- eggegrammeni_ts-psifisan_ts
akira_ts <- ts(simetoxiN_EU$AKIRA, start = 1, frequency =1)
lefka_ts <- ts(simetoxiN_EU$LEFKA, start = 1, frequency =1)
if(!require(forecast)){
install.packages("forecast")
library(forecast)
}
eggegrammeni_arima <- auto.arima(eggegrammeni_ts, trace = TRUE)
psifisan_arima <- auto.arima(psifisan_ts, trace = TRUE)
apoxi_arima <- auto.arima(apoxi_ts, trace = TRUE)
akira_arima <- auto.arima(akira_ts, trace = TRUE)
lefka_arima <- auto.arima(lefka_ts, trace = TRUE)
eggegrammeni_l <- forecast(eggegrammeni_arima, 5)$lower
eggegrammeni_u <- forecast(eggegrammeni_arima, 5)$upper
psifisan_l <- forecast(psifisan_arima, 5)$lower
psifisan_u <- forecast(psifisan_arima, 5)$upper
apoxi_l <- forecast(apoxi_arima, 5)$lower
apoxi_u <- forecast(apoxi_arima, 5)$upper
akira_l <- forecast(akira_arima, 5)$lower
akira_u <- forecast(akira_arima, 5)$upper
lefka_l <- forecast(lefka_arima, 5)$lower
lefka_u <- forecast(lefka_arima, 5)$upper
apoxiP_l <- 100*round(apoxi_l[,1]/eggegrammeni_u[,1], digits = 3)
apoxiP_u <- 100*round(apoxi_u[,1]/eggegrammeni_l[,1], digits = 3)
akiraP_l <- 100*round(akira_l[,1]/psifisan_u[,1], digits = 3)
akiraP_u <- 100*round(akira_u[,1]/psifisan_l[,1], digits = 3)
lefkaP_l <- 100*round(lefka_l[,1]/psifisan_u[,1], digits = 3)
lefkaP_u <- 100*round(lefka_u[,1]/psifisan_l[,1], digits = 3)
problepsisdf <- data.frame(
ΑΠΟΧΗ = paste("[", apoxiP_l, "%, ", apoxiP_u, "%]", sep = ""),
ΑΚΥΡΟ = paste("[", akiraP_l, "%, ",  akiraP_u, "%]", sep = ""),
ΛΕΥΚΟ = paste("[", lefkaP_l, "%, ",  lefkaP_u, "%]", sep = "")
)
problepsisdf
rmarkdown::render_site()
