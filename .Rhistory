value.name = "Value")
mathPISAbgwide <- unstack(allPISAbg, MATH ~ SUBJECT)
sciencePISAbgwide <- unstack(allPISAbg, SCIENCE ~ SUBJECT)
readingPISAbgwide <- unstack(allPISAbg, READING ~ SUBJECT)
boyPISA <- allPISA[allPISA$SUBJECT == "BOY",]
boyPISAlong <- melt(data = boyPISA,
id.vars = c("LOCATION","SUBJECT","TIME", "isGR"),
measure.vars = c("MATH","READING","SCIENCE"),
variable.name = "TYPE_exam",
value.name = "Value")
girlPISA <- allPISA[allPISA$SUBJECT == "GIRL",]
girlPISAlong <- melt(data = girlPISA,
id.vars = c("LOCATION","SUBJECT","TIME", "isGR"),
measure.vars = c("MATH","READING","SCIENCE"),
variable.name = "TYPE_exam",
value.name = "Value")
GRtot <- allPISAtot[allPISAtot$LOCATION == "GRC",]
GRtotMATH <- GRtot$MATH
GRtotSCIENCE <- GRtot$SCIENCE
GRtotREADING <- GRtot$READING
GRtot_xs <- ts(GRtot[ , c(4,5,6)], start = 2006, frequency = 1/3)
GRtot_xsMATH <- ts(GRtotMATH, start = 2006, frequency = 1/3)
GRtot_xsSCIENCE <- ts(GRtotSCIENCE, start = 2006, frequency = 1/3)
GRtot_xsREADING <- ts(GRtotREADING, start = 2006, frequency = 1/3)
GRbg <- allPISAbg[allPISAbg$LOCATION == "GRC",]
GRbg_long <- melt(data = GRbg,
id.vars = c("LOCATION","SUBJECT","TIME", "isGR"),
measure.vars = c("MATH","READING","SCIENCE"),
variable.name = "TYPE_exam",
value.name = "Value")
GRboy <- allPISA[boyPISA$LOCATION == "GRC",]
GRgirl <- allPISA[girlPISA$LOCATION == "GRC",]
df_mx <- function(df,type_e){
df_w <- dcast(df, TIME ~ LOCATION, value.var=type_e)
df_w <- df_w[,-1]
df_w <- df_w %>% select_if(~ !any(is.na(.)))
df_c <- cor(df_w, method = "kendall")
df_c <- as.matrix(df_c)
df_c
}
dist_df <- function(df,type_e){
df_w <- dcast(df, TIME ~ LOCATION, value.var=type_e)
df_w <- df_w[,-1]
df_w <- df_w %>% select_if(~ !any(is.na(.)))
df_m <- as.matrix(df_w)
df_m.t <- t(df_m)
dist.df_m <- dist(df_m.t, diag = TRUE, upper = TRUE)
dist.df_m <- as.matrix(dist.df_m)
dist.df_m
}
dist.allPISAmath_wide <- dist_df(allPISAtot, "MATH")
allPISAmath_wideCOR <- df_mx(allPISAtot, "MATH")
dist.allPISAscience_wide <- dist_df(allPISAtot, "SCIENCE")
allPISAscience_wideCOR <- df_mx(allPISAtot, "SCIENCE")
dist.allPISAreading_wide <- dist_df(allPISAtot, "READING")
allPISAreading_wideCOR <- df_mx(allPISAtot, "READING")
dist.boyPISAmath_wide <- dist_df(boyPISA, "MATH")
dist.boyPISAscience_wide <- dist_df(boyPISA, "SCIENCE")
dist.boyPISAreading_wide <- dist_df(boyPISA, "READING")
dist.girlPISAmath_wide <- dist_df(girlPISA, "MATH")
dist.girlPISAscience_wide <- dist_df(girlPISA, "SCIENCE")
dist.girlPISAreading_wide <- dist_df(girlPISA, "READING")
df_mx2 <- function(df_w){
df_w <- df_w %>% select_if(~ !any(is.na(.)))
df_c <- cor(df_w, method = "pearson")
df_c <- as.matrix(df_c)
df_c
}
typeExam_tot <- df_mx2(allPISAtot[,c(4,5,6)])
typeExam_boy <- df_mx2(boyPISA[,c(7,12,17)])
typeExam_girl <- df_mx2(girlPISA[,c(7,12,17)])
df_mx2k <- function(df_w){
df_w <- df_w %>% select_if(~ !any(is.na(.)))
df_c <- cor(df_w, method = "kendall")
df_c <- as.matrix(df_c)
df_c
}
typeExam_tot.K <- df_mx2k(allPISAtot[,c(4,5,6)])
typeExam_boy.K <- df_mx2k(boyPISA[,c(7,12,17)])
typeExam_girl.K <- df_mx2k(girlPISA[,c(7,12,17)])
# Για πίνακες μετάβασης
n <- length(allPISAtot$MATH)
q1 <- as.vector(quantile(allPISAtot$MATH))[2]
q2 <- as.vector(quantile(allPISAtot$MATH))[3]
q3 <- as.vector(quantile(allPISAtot$MATH))[4]
labels_ex.math <- rep("A", n)
for (i in 1:n){
if (allPISAtot$MATH[i] < q1){
labels_ex.math[i] <- "D"
} else if (allPISAtot$MATH[i] < q2) {
labels_ex.math[i] <- "C"
} else if (allPISAtot$MATH[i] < q3) {
labels_ex.math[i] <- "B"
}
}
n <- length(allPISAtot$SCIENCE)
q1 <- as.vector(quantile(allPISAtot$SCIENCE))[2]
q2 <- as.vector(quantile(allPISAtot$SCIENCE))[3]
q3 <- as.vector(quantile(allPISAtot$SCIENCE))[4]
labels_ex.science <- rep("A", n)
for (i in 1:n){
if (allPISAtot$SCIENCE[i] < q1){
labels_ex.science[i] <- "D"
} else if (allPISAtot$SCIENCE[i] < q2) {
labels_ex.science[i] <- "C"
} else if (allPISAtot$SCIENCE[i] < q3) {
labels_ex.science[i] <- "B"
}
}
n <- length(allPISAtot$READING)
q1 <- as.vector(quantile(allPISAtot$READING))[2]
q2 <- as.vector(quantile(allPISAtot$READING))[3]
q3 <- as.vector(quantile(allPISAtot$READING))[4]
labels_ex.reading <- rep("A", n)
for (i in 1:n){
if (allPISAtot$READING[i] < q1){
labels_ex.reading[i] <- "D"
} else if (allPISAtot$READING[i] < q2) {
labels_ex.reading[i] <- "C"
} else if (allPISAtot$READING[i] < q3) {
labels_ex.reading[i] <- "B"
}
}
allPISAtot$MATH_leb <- labels_ex.math
allPISAtot$SCIENCE_leb <- labels_ex.science
allPISAtot$READING_leb <- labels_ex.reading
Amath <- c(0,0,0,0)
Bmath <- c(0,0,0,0)
Cmath <- c(0,0,0,0)
Dmath <- c(0,0,0,0)
tr_math <- data.frame(Amath, Bmath, Cmath, Dmath)
for (country in unique(allPISAtot$LOCATION)){
ignor1st <- 0
allPISAtot.time <- allPISAtot[allPISAtot$LOCATION == country, ]
for (year in allPISAtot.time$TIME){
if (ignor1st != 0){
next_year <- allPISAtot.time[allPISAtot.time$TIME == year, "MATH_leb"]
if (last_year == "A"){
if (next_year == "A"){
tr_math[1,1] <- tr_math[1,1]+1
} else if (next_year == "B") {
tr_math[1,2] <- tr_math[1,2]+1
} else if (next_year == "C") {
tr_math[1,3] <- tr_math[1,3]+1
} else if (next_year == "D") {
tr_math[1,4] <- tr_math[1,4]+1
}
} else if (last_year == "B"){
if (next_year == "A"){
tr_math[2,1] <- tr_math[2,1]+1
} else if (next_year == "B") {
tr_math[2,2] <- tr_math[2,2]+1
} else if (next_year == "C") {
tr_math[2,3] <- tr_math[2,3]+1
} else if (next_year == "D") {
tr_math[2,4] <- tr_math[2,4]+1
}
} else if (last_year == "C"){
if (next_year == "A"){
tr_math[3,1] <- tr_math[3,1]+1
} else if (next_year == "B") {
tr_math[3,2] <- tr_math[3,2]+1
} else if (next_year == "C") {
tr_math[3,3] <- tr_math[3,3]+1
} else if (next_year == "D") {
tr_math[3,4] <- tr_math[3,4]+1
}
} else if (last_year == "D"){
if (next_year == "A"){
tr_math[4,1] <- tr_math[4,1]+1
} else if (next_year == "B") {
tr_math[4,2] <- tr_math[4,2]+1
} else if (next_year == "C") {
tr_math[4,3] <- tr_math[4,3]+1
} else if (next_year == "D") {
tr_math[4,4] <- tr_math[4,4]+1
}
}
}
ignor1st <- 1
last_year <- allPISAtot.time[allPISAtot.time$TIME == year, "MATH_leb"]
}
}
tr_math
tr_math[1,] <- tr_math[1,]/sum(tr_math[1,])
tr_math[2,] <- tr_math[2,]/sum(tr_math[2,])
tr_math[3,] <- tr_math[3,]/sum(tr_math[3,])
tr_math[4,] <- tr_math[4,]/sum(tr_math[4,])
tr_math2 <- as.matrix(tr_math)
tr_math <- 100*tr_math
tr_math <- as.matrix(tr_math)
rownames(tr_math) <- c("A.math", "B.math", "C.math", "D.math")
colnames(tr_math) <- c("A.math", "B.math", "C.math", "D.math")
Ascience <- c(0,0,0,0)
Bscience <- c(0,0,0,0)
Cscience <- c(0,0,0,0)
Dscience <- c(0,0,0,0)
tr_science <- data.frame(Ascience, Bscience, Cscience, Dscience)
for (country in unique(allPISAtot$LOCATION)){
ignor1st <- 0
allPISAtot.time <- allPISAtot[allPISAtot$LOCATION == country, ]
for (year in allPISAtot.time$TIME){
if (ignor1st != 0){
next_year <- allPISAtot.time[allPISAtot.time$TIME == year, "SCIENCE_leb"]
if (last_year == "A"){
if (next_year == "A"){
tr_science[1,1] <- tr_science[1,1]+1
} else if (next_year == "B") {
tr_science[1,2] <- tr_science[1,2]+1
} else if (next_year == "C") {
tr_science[1,3] <- tr_science[1,3]+1
} else if (next_year == "D") {
tr_science[1,4] <- tr_science[1,4]+1
}
} else if (last_year == "B"){
if (next_year == "A"){
tr_science[2,1] <- tr_science[2,1]+1
} else if (next_year == "B") {
tr_science[2,2] <- tr_science[2,2]+1
} else if (next_year == "C") {
tr_science[2,3] <- tr_science[2,3]+1
} else if (next_year == "D") {
tr_science[2,4] <- tr_science[2,4]+1
}
} else if (last_year == "C"){
if (next_year == "A"){
tr_science[3,1] <- tr_science[3,1]+1
} else if (next_year == "B") {
tr_science[3,2] <- tr_science[3,2]+1
} else if (next_year == "C") {
tr_science[3,3] <- tr_science[3,3]+1
} else if (next_year == "D") {
tr_science[3,4] <- tr_science[3,4]+1
}
} else if (last_year == "D"){
if (next_year == "A"){
tr_science[4,1] <- tr_science[4,1]+1
} else if (next_year == "B") {
tr_science[4,2] <- tr_science[4,2]+1
} else if (next_year == "C") {
tr_science[4,3] <- tr_science[4,3]+1
} else if (next_year == "D") {
tr_science[4,4] <- tr_science[4,4]+1
}
}
}
ignor1st <- 1
last_year <- allPISAtot.time[allPISAtot.time$TIME == year, "SCIENCE_leb"]
}
}
tr_science
tr_science[1,] <- tr_science[1,]/sum(tr_science[1,])
tr_science[2,] <- tr_science[2,]/sum(tr_science[2,])
tr_science[3,] <- tr_science[3,]/sum(tr_science[3,])
tr_science[4,] <- tr_science[4,]/sum(tr_science[4,])
tr_science2 <- as.matrix(tr_science)
tr_science <- 100*tr_science
tr_science <- as.matrix(tr_science)
rownames(tr_science) <- c("A.science", "B.science", "C.science", "D.science")
colnames(tr_science) <- c("A.science", "B.science", "C.science", "D.science")
Areading <- c(0,0,0,0)
Breading <- c(0,0,0,0)
Creading <- c(0,0,0,0)
Dreading <- c(0,0,0,0)
tr_reading <- data.frame(Areading, Breading, Creading, Dreading)
for (country in unique(allPISAtot$LOCATION)){
ignor1st <- 0
allPISAtot.time <- allPISAtot[allPISAtot$LOCATION == country, ]
for (year in allPISAtot.time$TIME){
if (ignor1st != 0){
next_year <- allPISAtot.time[allPISAtot.time$TIME == year, "READING_leb"]
if (last_year == "A"){
if (next_year == "A"){
tr_reading[1,1] <- tr_reading[1,1]+1
} else if (next_year == "B") {
tr_reading[1,2] <- tr_reading[1,2]+1
} else if (next_year == "C") {
tr_reading[1,3] <- tr_reading[1,3]+1
} else if (next_year == "D") {
tr_reading[1,4] <- tr_reading[1,4]+1
}
} else if (last_year == "B"){
if (next_year == "A"){
tr_reading[2,1] <- tr_reading[2,1]+1
} else if (next_year == "B") {
tr_reading[2,2] <- tr_reading[2,2]+1
} else if (next_year == "C") {
tr_reading[2,3] <- tr_reading[2,3]+1
} else if (next_year == "D") {
tr_reading[2,4] <- tr_reading[2,4]+1
}
} else if (last_year == "C"){
if (next_year == "A"){
tr_reading[3,1] <- tr_reading[3,1]+1
} else if (next_year == "B") {
tr_reading[3,2] <- tr_reading[3,2]+1
} else if (next_year == "C") {
tr_reading[3,3] <- tr_reading[3,3]+1
} else if (next_year == "D") {
tr_reading[3,4] <- tr_reading[3,4]+1
}
} else if (last_year == "D"){
if (next_year == "A"){
tr_reading[4,1] <- tr_reading[4,1]+1
} else if (next_year == "B") {
tr_reading[4,2] <- tr_reading[4,2]+1
} else if (next_year == "C") {
tr_reading[4,3] <- tr_reading[4,3]+1
} else if (next_year == "D") {
tr_reading[4,4] <- tr_reading[4,4]+1
}
}
}
ignor1st <- 1
last_year <- allPISAtot.time[allPISAtot.time$TIME == year, "READING_leb"]
}
}
tr_reading
tr_reading[1,] <- tr_reading[1,]/sum(tr_reading[1,])
tr_reading[2,] <- tr_reading[2,]/sum(tr_reading[2,])
tr_reading[3,] <- tr_reading[3,]/sum(tr_reading[3,])
tr_reading[4,] <- tr_reading[4,]/sum(tr_reading[4,])
tr_reading2 <- as.matrix(tr_reading)
tr_reading <- 100*tr_reading
tr_reading <- as.matrix(tr_reading)
rownames(tr_reading) <- c("A.reading", "B.reading", "C.reading", "D.reading")
colnames(tr_reading) <- c("A.reading", "B.reading", "C.reading", "D.reading")
graf_symmetrias <-  function(x)  {
n = length(x)
n2 = n %/% 2
sx = sort(x)
mx = median(x)
plot(mx - sx[1:n2], rev(sx)[1:n2] - mx,
xlab = "Distance Below Median",
ylab = "Distance Above Median")
abline(a = 0, b = 1, lty = "dotted")
}
math_ALL <- allPISAtot$MATH
reading_ALL <- allPISAtot$READING
science_ALL <- allPISAtot$SCIENCE
math_boyALL <- boyPISA$MATH
math_girlALL <- girlPISA$MATH
reading_boyALL <- boyPISA$READING
reading_girlALL <- girlPISA$READING
science_boyALL <- boyPISA$SCIENCE
science_girlALL <- girlPISA$SCIENCE
histMathgr <- ggplot(allPISAtot, aes(y=LOCATION, x=MATH, fill = isGR))
histMathgr + geom_density_ridges() +
scale_fill_manual(values = c("blue", "orange"))+ggtitle("Κατανομή βαθμολογιών κάθε χώρας στα Μαθηματικά.")
boxplotMathgr <- ggplot(allPISAtot, aes(y=LOCATION, x=MATH, fill = isGR))
boxplotMathgr +
geom_boxplot(outlier.shape = NA) +
scale_fill_manual(values = c("blue", "orange"))+ggtitle("Κατανομή βαθμολογιών κάθε χώρας στα Μαθηματικά.")
kruskal.test(MATH ~ LOCATION, data = allPISAtot)
pheatmap(dist.allPISAmath_wide)
histMathgrBOY <- ggplot(boyPISA, aes(y=LOCATION, x=MATH, fill = isGR))
histMathgrBOY + geom_density_ridges() +
scale_fill_manual(values = c("blue", "orange"))+ggtitle("Κατανομή βαθμολογιών κάθε χώρας στα Μαθηματικά (αγόρια).")
boxplotMathgrBOY <- ggplot(boyPISA, aes(y=LOCATION, x=MATH, fill = isGR))
boxplotMathgrBOY +
geom_boxplot(outlier.shape = NA) +
scale_fill_manual(values = c("blue", "orange"))+ggtitle("Κατανομή βαθμολογιών κάθε χώρας στα Μαθηματικά (αγόρια).")
kruskal.test(MATH ~ LOCATION, data = boyPISA)
pheatmap(dist.boyPISAmath_wide)
histMathgrGIRL <- ggplot(girlPISA, aes(y=LOCATION, x=MATH, fill = isGR))
histMathgrGIRL + geom_density_ridges() +
scale_fill_manual(values = c("blue", "orange"))+ggtitle("Κατανομή βαθμολογιών κάθε χώρας στα Μαθηματικά (κορίτσια).")
boxplotMathgrGIRL <- ggplot(girlPISA, aes(y=LOCATION, x=MATH, fill = isGR))
boxplotMathgrGIRL +
geom_boxplot(outlier.shape = NA) +
scale_fill_manual(values = c("blue", "orange"))+ggtitle("Κατανομή βαθμολογιών κάθε χώρας στα Μαθηματικά (κορίτσια).")
kruskal.test(MATH ~ LOCATION, data = girlPISA)
pheatmap(dist.girlPISAmath_wide)
histSciencegr <- ggplot(allPISAtot, aes(y=LOCATION, x=SCIENCE, fill = isGR))
histSciencegr + geom_density_ridges() +
scale_fill_manual(values = c("blue", "orange"))+ggtitle("Κατανομή βαθμολογιών κάθε χώρας στις Φυσικές Επιστήμες.")
boxplotSciencegr <- ggplot(allPISAtot, aes(y=LOCATION, x=SCIENCE, fill = isGR))
boxplotSciencegr +
geom_boxplot(outlier.shape = NA) +
scale_fill_manual(values = c("blue", "orange"))+ggtitle("Κατανομή βαθμολογιών κάθε χώρας στις Φυσικές Επιστήμες.")
kruskal.test(SCIENCE ~ LOCATION, data = allPISAtot)
pheatmap(dist.allPISAscience_wide)
histScienceBOY <- ggplot(boyPISA, aes(y=LOCATION, x=SCIENCE, fill = isGR))
histScienceBOY + geom_density_ridges() +
scale_fill_manual(values = c("blue", "orange"))+ggtitle("Κατανομή βαθμολογιών κάθε χώρας στις Φυσικές Επιστήμες (αγόρια).")
boxplotSciencegrBOY <- ggplot(boyPISA, aes(y=LOCATION, x=SCIENCE, fill = isGR))
boxplotSciencegrBOY +
geom_boxplot(outlier.shape = NA) +
scale_fill_manual(values = c("blue", "orange"))+ggtitle("Κατανομή βαθμολογιών κάθε χώρας στις Φυσικές Επιστήμες (αγόρια).")
kruskal.test(SCIENCE ~ LOCATION, data = boyPISA)
pheatmap(dist.boyPISAscience_wide)
histScienceGIRL <- ggplot(girlPISA, aes(y=LOCATION, x=SCIENCE, fill = isGR))
histScienceGIRL + geom_density_ridges() +
scale_fill_manual(values = c("blue", "orange"))+ggtitle("Κατανομή βαθμολογιών κάθε χώρας στις Φυσικές Επιστήμες (κορίτσια).")
boxplotSciencegrGIRL <- ggplot(girlPISA, aes(y=LOCATION, x=SCIENCE, fill = isGR))
boxplotSciencegrGIRL +
geom_boxplot(outlier.shape = NA) +
scale_fill_manual(values = c("blue", "orange"))+ggtitle("Κατανομή βαθμολογιών κάθε χώρας στις Φυσικές Επιστήμες (κορίτσια).")
kruskal.test(SCIENCE ~ LOCATION, data = girlPISA)
pheatmap(dist.girlPISAscience_wide)
histReadinggr <- ggplot(allPISAtot, aes(y=LOCATION, x=READING, fill = isGR))
histReadinggr + geom_density_ridges() +
scale_fill_manual(values = c("blue", "orange"))+ggtitle("Κατανομή βαθμολογιών κάθε χώρας στην Κατανόηση Κειμένου.")
boxplotReadinggr <- ggplot(allPISAtot, aes(y=LOCATION, x=READING, fill = isGR))
boxplotReadinggr +
geom_boxplot(outlier.shape = NA) +
scale_fill_manual(values = c("blue", "orange"))+ggtitle("Κατανομή βαθμολογιών κάθε χώρας στην Κατανόηση Κειμένου.")
kruskal.test(READING ~ LOCATION, data = allPISAtot)
pheatmap(dist.allPISAreading_wide)
histReadinggrBOY <- ggplot(boyPISA, aes(y=LOCATION, x=READING, fill = isGR))
histReadinggrBOY + geom_density_ridges() +
scale_fill_manual(values = c("blue", "orange"))+ggtitle("Κατανομή βαθμολογιών κάθε χώρας στην Κατανόηση Κειμένου (αγόρια).")
boxplotReadinggrBOY <- ggplot(boyPISA, aes(y=LOCATION, x=READING, fill = isGR))
boxplotReadinggrBOY +
geom_boxplot(outlier.shape = NA) +
scale_fill_manual(values = c("blue", "orange"))+ggtitle("Κατανομή βαθμολογιών κάθε χώρας στην Κατανόηση Κειμένου (αγόρια).")
kruskal.test(READING ~ LOCATION, data = boyPISA)
pheatmap(dist.boyPISAreading_wide)
histReadinggrGIRL <- ggplot(girlPISA, aes(y=LOCATION, x=READING, fill = isGR))
histReadinggrGIRL + geom_density_ridges() +
scale_fill_manual(values = c("blue", "orange"))+ggtitle("Κατανομή βαθμολογιών κάθε χώρας στην Κατανόηση Κειμένου (κορίτσια).")
boxplotReadinggrGIRL <- ggplot(girlPISA, aes(y=LOCATION, x=READING, fill = isGR))
boxplotReadinggrGIRL +
geom_boxplot(outlier.shape = NA) +
scale_fill_manual(values = c("blue", "orange"))+ggtitle("Κατανομή βαθμολογιών κάθε χώρας στην Κατανόηση Κειμένου (κορίτσια).")
kruskal.test(READING ~ LOCATION, data = girlPISA)
pheatmap(dist.girlPISAreading_wide)
histALLgr <- ggplot(allPISAtotlong, aes(y=TYPE_exam, x=Value, fill = isGR, alpha = 0.4))
histALLgr + geom_density_ridges() +
scale_fill_manual(values = c("blue", "orange"))+ggtitle("Σύγκριση αποτελεσμάτων της Ελλάδας με υπολοίπων χωρών.")
boxplotALLgr <- ggplot(allPISAtotlong, aes(x=TYPE_exam, y=Value, fill = isGR))
boxplotALLgr +
geom_boxplot(outlier.shape = NA) +
geom_jitter(position=position_jitterdodge(), alpha = 0.2, size = 1) +
scale_fill_manual(values = c("blue", "orange"))+ ggtitle("Σύγκριση αποτελεσμάτων της Ελλάδας με υπολοίπων χωρών.")
wilcox.test(MATH ~ isGR, data = allPISAtot)
wilcox.test(SCIENCE ~ isGR, data = allPISAtot)
wilcox.test(READING ~ isGR, data = allPISAtot)
cohen.d(MATH ~ isGR, data = allPISAtot)
wilcox_effsize(MATH ~ isGR, data = allPISAtot)
cohen.d(SCIENCE ~ isGR, data = allPISAtot)
wilcox_effsize(SCIENCE ~ isGR, data = allPISAtot)
cohen.d(READING ~ isGR, data = allPISAtot)
wilcox_effsize(READING ~ isGR, data = allPISAtot)
histBOYgr <- ggplot(boyPISAlong, aes(y=TYPE_exam, x=Value, fill = isGR, alpha = 0.4))
histBOYgr + geom_density_ridges() +
scale_fill_manual(values = c("blue", "orange"))+ ggtitle("Σύγκριση αποτελεσμάτων της Ελλάδας με υπολοίπων χωρών (αγόρια).")
boxplotBOYgr <- ggplot(boyPISAlong, aes(x=TYPE_exam, y=Value, fill = isGR))
boxplotBOYgr +
geom_boxplot(outlier.shape = NA) +
geom_jitter(position=position_jitterdodge(), alpha = 0.2, size = 1) +
scale_fill_manual(values = c("blue", "orange"))+ ggtitle("Σύγκριση αποτελεσμάτων της Ελλάδας με υπολοίπων χωρών (αγόρια).")
wilcox.test(MATH ~ isGR, data = boyPISA)
wilcox.test(SCIENCE ~ isGR, data = boyPISA)
wilcox.test(READING ~ isGR, data = boyPISA)
cohen.d(MATH ~ isGR, data = boyPISA)
wilcox_effsize(MATH ~ isGR, data = boyPISA)
cohen.d(SCIENCE ~ isGR, data = boyPISA)
wilcox_effsize(SCIENCE ~ isGR, data = boyPISA)
cohen.d(READING ~ isGR, data = boyPISA)
wilcox_effsize(READING ~ isGR, data = boyPISA)
histGIRLgr <- ggplot(girlPISAlong, aes(y=TYPE_exam, x=Value, fill = isGR, alpha = 0.4))
histGIRLgr + geom_density_ridges() +
scale_fill_manual(values = c("blue", "orange"))+ ggtitle("Σύγκριση αποτελεσμάτων της Ελλάδας με υπολοίπων χωρών (κορίτσια).")
boxplotGIRLgr <- ggplot(girlPISAlong, aes(x=TYPE_exam, y=Value, fill = isGR))
boxplotGIRLgr +
geom_boxplot(outlier.shape = NA) +
geom_jitter(position=position_jitterdodge(), alpha = 0.2, size = 1) +
scale_fill_manual(values = c("blue", "orange"))+ ggtitle("Σύγκριση αποτελεσμάτων της Ελλάδας με υπολοίπων χωρών (κορότσια).")
wilcox.test(MATH ~ isGR, data = girlPISA)
wilcox.test(SCIENCE ~ isGR, data = girlPISA)
wilcox.test(READING ~ isGR, data = girlPISA)
cohen.d(MATH ~ isGR, data = girlPISA)
wilcox_effsize(MATH ~ isGR, data = girlPISA)
cohen.d(SCIENCE ~ isGR, data = girlPISA)
wilcox_effsize(SCIENCE ~ isGR, data = girlPISA)
cohen.d(READING ~ isGR, data = girlPISA)
wilcox_effsize(READING ~ isGR, data = girlPISA)
hist_bg <- ggplot(allPISAbglong, aes(y=TYPE_exam, x=Value, fill = SUBJECT, alpha = 0.4))
hist_bg + geom_density_ridges() +
scale_fill_manual(values = c("cyan", "pink"))
boxplot_bg <- ggplot(allPISAbglong, aes(x=TYPE_exam, y=Value, fill = factor(SUBJECT))) + ggtitle("Σύγκριση επίδοσης σε αγόρια και κορίτσια σε κάθε μάθημα.")
boxplot_bg +
geom_boxplot(outlier.shape = NA)+
geom_jitter(position=position_jitterdodge(), alpha = 0.2)+
scale_fill_manual(values = c("cyan", "pink")) + ggtitle("Σύγκριση επίδοσης σε αγόρια και κορίτσια σε κάθε μάθημα.")
wilcox.test(MATH ~ SUBJECT, data = allPISAbg)
wilcox.test(SCIENCE ~ SUBJECT, data = allPISAbg)
wilcox.test(READING ~ SUBJECT, data = allPISAbg)
cohen.d(MATH ~ SUBJECT, data = allPISAbg)
wilcox_effsize(MATH ~ SUBJECT, data = allPISAbg)
cohen.d(SCIENCE ~ SUBJECT, data = allPISAbg)
wilcox_effsize(SCIENCE ~ SUBJECT, data = allPISAbg)
cohen.d(READING ~ SUBJECT, data = allPISAbg)
wilcox_effsize(READING ~ SUBJECT, data = allPISAbg)
mathBoyGirl <- ggplot(mathPISAbgwide, aes(x = BOY, y = GIRL))
mathBoyGirl + geom_point() + geom_smooth(method='lm') + ggtitle("Συσχέτιση επίδοσης αγοριών – κοριτσιών στα Μαθηματικά.")
scienceBoyGirl <- ggplot(sciencePISAbgwide, aes(x = BOY, y = GIRL))
scienceBoyGirl + geom_point() + geom_smooth(method='lm') + ggtitle("Συσχέτιση επίδοσης αγοριών – κοριτσιών στις Φυσικές Επιστήμες.")
readingBoyGirl <- ggplot(readingPISAbgwide, aes(x = BOY, y = GIRL))
readingBoyGirl + geom_point() + geom_smooth(method='lm') + ggtitle("Συσχέτιση επίδοσης αγοριών – κοριτσιών στην Κατανόηση Κειμένου.")
boxplot_tot2 <- ggplot(allPISAtotlong, aes(x="", y=Value, fill = TYPE_exam))
boxplot_tot2 +
geom_boxplot(outlier.shape = NA)+
scale_fill_manual(values = c("red", "green", "yellow"))+
geom_jitter(position=position_jitterdodge(), alpha = 0.2)+ggtitle("Σύγκριση επιδόσεων στα διάφορα αντικείμενα εξέτασης.")
kruskal.test(Value ~ TYPE_exam, data = allPISAtotlong)
hist_bg <- ggplot(allPISAbglong, aes(y=TYPE_exam, x=Value, fill = SUBJECT, alpha = 0.4))
hist_bg + geom_density_ridges() +
scale_fill_manual(values = c("cyan", "pink")) + ggtitle("Σύγκριση επίδοσης σε αγόρια και κορίτσια σε κάθε μάθημα.")
boxplot_bg <- ggplot(allPISAbglong, aes(x=TYPE_exam, y=Value, fill = factor(SUBJECT))) + ggtitle("Σύγκριση επίδοσης σε αγόρια και κορίτσια σε κάθε μάθημα.")
rmarkdown::render_site()
