fuel <- page %>% html_nodes(xpath = "//script[contains(., 'fuelType')]") %>%
html_text() %>%
gsub(".*\"fuelType\":\"([^\"]+)\".*", "\\1", .)
manufacturer <- page %>% html_nodes(xpath = "//script[contains(., 'manufacturer')]") %>%
html_text() %>%
gsub(".*\"manufacturer\":\"([^\"]+)\".*", "\\1", .)
# Προσθήκη των δεδομένων στο dataframe
data <- rbind(data, data.frame(χιλιόμετρα = as.integer(mileage),
καύσιμο = fuel,
μάρκα = manufacturer,
stringsAsFactors = FALSE))
}
# Δημιουργία ενός κενού dataframe για την αποθήκευση των δεδομένων
data <- data.frame(χιλιόμετρα = integer(),
καύσιμο = character(),
μάρκα = character(),
stringsAsFactors = FALSE)
# Διευθύνσεις των σελίδων που θες να ελέγξεις
urls <- c("https://www.car.gr/classifieds/cars/view/337799572-renault-captur?from-promotion=1")
# Αναζήτηση δεδομένων σε κάθε URL
for (url in urls) {
# Λήψη του HTML κώδικα της σελίδας
page <- read_html(url)
# Απόσπαση των τιμών χιλιομέτρων, καυσίμου και μάρκας
mileage <- page %>% html_nodes(xpath = "//script[contains(., 'mileageFromOdometer')]") %>%
html_text() %>%
gsub(".*\"mileageFromOdometer\":\\{\"@type\":\"QuantitativeValue\",\"value\":(\\d+),\"unitText\":\"km\"\\}.*", "\\1", .)
if (!grepl("^\\d+$", mileage)) {
mileage <- NA
} else {
mileage <- as.integer(mileage)
}
fuel <- page %>% html_nodes(xpath = "//script[contains(., 'fuelType')]") %>%
html_text() %>%
gsub(".*\"fuelType\":\"([^\"]+)\".*", "\\1", .)
manufacturer <- page %>% html_nodes(xpath = "//script[contains(., 'manufacturer')]") %>%
html_text() %>%
gsub(".*\"manufacturer\":\"([^\"]+)\".*", "\\1", .)
# Προσθήκη των δεδομένων στο dataframe
data <- rbind(data, data.frame(χιλιόμετρα = mileage,
καύσιμο = fuel,
μάρκα = manufacturer,
stringsAsFactors = FALSE))
}
if(!require(rvest)){
install.packages("rvest")
library(rvest)
}
if(!require(dplyr)){
install.packages("dplyr")
library(dplyr)
}
if(!require(readr)){
install.packages("readr")
library(readr)
}
# Δημιουργία ενός κενού dataframe για την αποθήκευση των δεδομένων
data <- data.frame(χιλιόμετρα = integer(),
καύσιμο = character(),
μάρκα = character(),
stringsAsFactors = FALSE)
# Διευθύνσεις των σελίδων που θες να ελέγξεις
urls <- c("https://www.car.gr/classifieds/cars/view/337799572-renault-captur?from-promotion=1")
# Αναζήτηση δεδομένων σε κάθε URL
for (url in urls) {
# Λήψη του HTML κώδικα της σελίδας
page <- read_html(url)
# Απόσπαση των τιμών χιλιομέτρων, καυσίμου και μάρκας
mileage <- page %>% html_nodes(xpath = "//script[contains(., 'mileageFromOdometer')]") %>%
html_text() %>%
gsub(".*\"mileageFromOdometer\":\\{\"@type\":\"QuantitativeValue\",\"value\":(\\d+),\"unitText\":\"km\"\\}.*", "\\1", .)
fuel <- page %>% html_nodes(xpath = "//script[contains(., 'fuelType')]") %>%
html_text() %>%
gsub(".*\"fuelType\":\"([^\"]+)\".*", "\\1", .)
manufacturer <- page %>% html_nodes(xpath = "//script[contains(., 'manufacturer')]") %>%
html_text() %>%
gsub(".*\"manufacturer\":\"([^\"]+)\".*", "\\1", .)
# Προσθήκη των δεδομένων στο dataframe
data <- rbind(data, data.frame(χιλιόμετρα = as.integer(mileage),
καύσιμο = fuel,
μάρκα = manufacturer,
stringsAsFactors = FALSE))
}
# Δημιουργία ενός κενού dataframe για την αποθήκευση των δεδομένων
data <- data.frame(χιλιόμετρα = integer(),
καύσιμο = character(),
μάρκα = character(),
stringsAsFactors = FALSE)
# Διευθύνσεις των σελίδων που θες να ελέγξεις
urls <- c("https://www.car.gr/classifieds/cars/view/337799572-renault-captur?from-promotion=1")
# Αναζήτηση δεδομένων σε κάθε URL
for (url in urls) {
# Λήψη του HTML κώδικα της σελίδας
page <- read_html(url)
# Απόσπαση των τιμών χιλιομέτρων, καυσίμου και μάρκας
mileage <- page %>% html_nodes(xpath = "//script[contains(., 'mileageFromOdometer')]") %>%
html_text() %>%
gsub(".*\"mileageFromOdometer\":\\{\"@type\":\"QuantitativeValue\",\"value\":(\\d+),\"unitText\":\"km\"\\}.*", "\\1", .) %>%
.[1]  # Επιλογή της πρώτης ένδειξης
fuel <- page %>% html_nodes(xpath = "//script[contains(., 'fuelType')]") %>%
html_text() %>%
gsub(".*\"fuelType\":\"([^\"]+)\".*", "\\1", .) %>%
.[1]  # Επιλογή της πρώτης ένδειξης
manufacturer <- page %>% html_nodes(xpath = "//script[contains(., 'manufacturer')]") %>%
html_text() %>%
gsub(".*\"manufacturer\":\"([^\"]+)\".*", "\\1", .) %>%
.[1]  # Επιλογή της πρώτης ένδειξης
# Προσθήκη των δεδομένων στο dataframe
data <- rbind(data, data.frame(χιλιόμετρα = as.integer(mileage),
καύσιμο = fuel,
μάρκα = manufacturer,
stringsAsFactors = FALSE))
}
View(data)
# Δημιουργία ενός κενού dataframe για την αποθήκευση των δεδομένων
data <- data.frame(χιλιόμετρα = integer(),
καύσιμο = character(),
μάρκα = character(),
stringsAsFactors = FALSE)
# Διευθύνσεις των σελίδων που θες να ελέγξεις
urls <- c("https://www.car.gr/classifieds/cars/view/337799572-renault-captur?from-promotion=1"."https://www.car.gr/classifieds/cars/view/344321776-citroen-c3")
# Δημιουργία ενός κενού dataframe για την αποθήκευση των δεδομένων
data <- data.frame(χιλιόμετρα = integer(),
καύσιμο = character(),
μάρκα = character(),
stringsAsFactors = FALSE)
# Διευθύνσεις των σελίδων που θες να ελέγξεις
urls <- c("https://www.car.gr/classifieds/cars/view/337799572-renault-captur?from-promotion=1","https://www.car.gr/classifieds/cars/view/344321776-citroen-c3")
# Αναζήτηση δεδομένων σε κάθε URL
for (url in urls) {
# Λήψη του HTML κώδικα της σελίδας
page <- read_html(url)
# Απόσπαση των τιμών χιλιομέτρων, καυσίμου και μάρκας
mileage <- page %>% html_nodes(xpath = "//script[contains(., 'mileageFromOdometer')]") %>%
html_text() %>%
gsub(".*\"mileageFromOdometer\":\\{\"@type\":\"QuantitativeValue\",\"value\":(\\d+),\"unitText\":\"km\"\\}.*", "\\1", .) %>%
.[1]  # Επιλογή της πρώτης ένδειξης
fuel <- page %>% html_nodes(xpath = "//script[contains(., 'fuelType')]") %>%
html_text() %>%
gsub(".*\"fuelType\":\"([^\"]+)\".*", "\\1", .) %>%
.[1]  # Επιλογή της πρώτης ένδειξης
manufacturer <- page %>% html_nodes(xpath = "//script[contains(., 'manufacturer')]") %>%
html_text() %>%
gsub(".*\"manufacturer\":\"([^\"]+)\".*", "\\1", .) %>%
.[1]  # Επιλογή της πρώτης ένδειξης
# Προσθήκη των δεδομένων στο dataframe
data <- rbind(data, data.frame(χιλιόμετρα = as.integer(mileage),
καύσιμο = fuel,
μάρκα = manufacturer,
stringsAsFactors = FALSE))
}
View(data)
# Λήψη της κύριας σελίδας με τις αγγελίες
main_page <- read_html("https://www.car.gr/classifieds/cars/?category=15001&offer_type=sale")
# Απόσπαση όλων των συνδέσμων που οδηγούν σε αγγελίες αυτοκινήτων
urls <- main_page %>%
html_nodes("a[href^='/classifieds/cars/view/']") %>%
html_attr("href") %>%
unique() %>%
paste0("https://www.car.gr", .)  # Δημιουργία πλήρους URL
# Δημιουργία ενός κενού dataframe για την αποθήκευση των δεδομένων
data <- data.frame(χιλιόμετρα = integer(),
καύσιμο = character(),
μάρκα = character(),
stringsAsFactors = FALSE)
# Αναζήτηση δεδομένων σε κάθε URL
for (url in urls) {
print(paste("Processing:", url))
# Χειρισμός εξαιρέσεων με tryCatch
page <- tryCatch({
read_html(url)
}, error = function(e) {
message(paste("Error accessing:", url))
return(NULL)
})
if (is.null(page)) {
next
}
# Απόσπαση των τιμών χιλιομέτρων, καυσίμου και μάρκας
mileage <- page %>% html_nodes(xpath = "//script[contains(., 'mileageFromOdometer')]") %>%
html_text() %>%
gsub(".*\"mileageFromOdometer\":\\{\"@type\":\"QuantitativeValue\",\"value\":(\\d+),\"unitText\":\"km\"\\}.*", "\\1", .) %>%
.[1]  # Επιλογή της πρώτης ένδειξης
fuel <- page %>% html_nodes(xpath = "//script[contains(., 'fuelType')]") %>%
html_text() %>%
gsub(".*\"fuelType\":\"([^\"]+)\".*", "\\1", .) %>%
.[1]  # Επιλογή της πρώτης ένδειξης
manufacturer <- page %>% html_nodes(xpath = "//script[contains(., 'manufacturer')]") %>%
html_text() %>%
gsub(".*\"manufacturer\":\"([^\"]+)\".*", "\\1", .) %>%
.[1]  # Επιλογή της πρώτης ένδειξης
# Προσθήκη των δεδομένων στο dataframe
data <- rbind(data, data.frame(χιλιόμετρα = as.integer(mileage),
καύσιμο = fuel,
μάρκα = manufacturer,
stringsAsFactors = FALSE))
}
View(data)
rm(list = ls())
if(!require(rvest)){
install.packages("rvest")
library(rvest)
}
if(!require(dplyr)){
install.packages("dplyr")
library(dplyr)
}
if(!require(readr)){
install.packages("readr")
library(readr)
}
# Αρχικοποίηση κενής λίστας για την αποθήκευση όλων των URLs
all_urls <- c()
# Ο αριθμός των σελίδων που θέλεις να ελέγξεις
num_pages <- 5  # Αντικατάστησέ το με τον πραγματικό αριθμό των σελίδων
# Επαναληπτική διαδικασία για να περάσεις από όλες τις σελίδες
for (i in 1:num_pages) {
# Δημιουργία του URL της τρέχουσας σελίδας
page_url <- paste0("https://www.car.gr/classifieds/cars/?category=15001&offer_type=sale&pg=", i)
# Λήψη της σελίδας
main_page <- read_html(page_url)
# Απόσπαση όλων των συνδέσμων που οδηγούν σε αγγελίες αυτοκινήτων
urls <- main_page %>%
html_nodes("a[href^='/classifieds/cars/view/']") %>%
html_attr("href") %>%
unique() %>%
paste0("https://www.car.gr", .)  # Δημιουργία πλήρους URL
# Προσθήκη των URLs στη λίστα
all_urls <- c(all_urls, urls)
}
# Δημιουργία ενός κενού dataframe για την αποθήκευση των δεδομένων
data <- data.frame(χιλιόμετρα = integer(),
καύσιμο = character(),
μάρκα = character(),
stringsAsFactors = FALSE)
# Αναζήτηση δεδομένων σε κάθε URL
for (url in all_urls) {
print(paste("Processing:", url))
# Χειρισμός εξαιρέσεων με tryCatch
page <- tryCatch({
read_html(url)
}, error = function(e) {
message(paste("Error accessing:", url))
return(NULL)
})
if (is.null(page)) {
next
}
# Απόσπαση των τιμών χιλιομέτρων, καυσίμου και μάρκας
mileage <- page %>% html_nodes(xpath = "//script[contains(., 'mileageFromOdometer')]") %>%
html_text() %>%
gsub(".*\"mileageFromOdometer\":\\{\"@type\":\"QuantitativeValue\",\"value\":(\\d+),\"unitText\":\"km\"\\}.*", "\\1", .) %>%
.[1]  # Επιλογή της πρώτης ένδειξης
fuel <- page %>% html_nodes(xpath = "//script[contains(., 'fuelType')]") %>%
html_text() %>%
gsub(".*\"fuelType\":\"([^\"]+)\".*", "\\1", .) %>%
.[1]  # Επιλογή της πρώτης ένδειξης
manufacturer <- page %>% html_nodes(xpath = "//script[contains(., 'manufacturer')]") %>%
html_text() %>%
gsub(".*\"manufacturer\":\"([^\"]+)\".*", "\\1", .) %>%
.[1]  # Επιλογή της πρώτης ένδειξης
# Προσθήκη των δεδομένων στο dataframe
data <- rbind(data, data.frame(χιλιόμετρα = as.integer(mileage),
καύσιμο = fuel,
μάρκα = manufacturer,
stringsAsFactors = FALSE))
}
View(data)
rm(list = ls())
if(!require(rvest)){
install.packages("rvest")
library(rvest)
}
if(!require(dplyr)){
install.packages("dplyr")
library(dplyr)
}
if(!require(readr)){
install.packages("readr")
library(readr)
}
# Αρχικοποίηση κενής λίστας για την αποθήκευση όλων των URLs
all_urls <- c()
# Ο αριθμός των σελίδων που θέλεις να ελέγξεις
num_pages <- 4507  # Αντικατάστησέ το με τον πραγματικό αριθμό των σελίδων
# Επαναληπτική διαδικασία για να περάσεις από όλες τις σελίδες
for (i in 1:num_pages) {
# Δημιουργία του URL της τρέχουσας σελίδας
page_url <- paste0("https://www.car.gr/classifieds/cars/?category=15001&offer_type=sale&pg=", i)
# Λήψη της σελίδας
main_page <- read_html(page_url)
# Απόσπαση όλων των συνδέσμων που οδηγούν σε αγγελίες αυτοκινήτων
urls <- main_page %>%
html_nodes("a[href^='/classifieds/cars/view/']") %>%
html_attr("href") %>%
unique() %>%
paste0("https://www.car.gr", .)  # Δημιουργία πλήρους URL
# Προσθήκη των URLs στη λίστα
all_urls <- c(all_urls, urls)
}
# Αρχικοποίηση κενής λίστας για την αποθήκευση όλων των URLs
all_urls <- c()
# Ο αριθμός των σελίδων που θέλεις να ελέγξεις
num_pages <- 4507  # Αντικατάστησέ το με τον πραγματικό αριθμό των σελίδων
# Επαναληπτική διαδικασία για να περάσεις από όλες τις σελίδες
for (i in 1:num_pages) {
# Δημιουργία του URL της τρέχουσας σελίδας
page_url <- paste0("https://www.car.gr/classifieds/cars/?category=15001&offer_type=sale&pg=", i)
# Λήψη της σελίδας
main_page <- read_html(page_url)
# Απόσπαση όλων των συνδέσμων που οδηγούν σε αγγελίες αυτοκινήτων
urls <- main_page %>%
html_nodes("a[href^='/classifieds/cars/view/']") %>%
html_attr("href") %>%
unique() %>%
paste0("https://www.car.gr", .)  # Δημιουργία πλήρους URL
# Προσθήκη των URLs στη λίστα
all_urls <- c(all_urls, urls)
}
# Αρχικοποίηση κενής λίστας για την αποθήκευση όλων των URLs
all_urls <- c()
# Ο αριθμός των σελίδων που θέλεις να ελέγξεις
num_pages <- 4507  # Αντικατάστησέ το με τον πραγματικό αριθμό των σελίδων
# Επαναληπτική διαδικασία για να περάσεις από όλες τις σελίδες
for (i in 1:num_pages) {
# Δημιουργία του URL της τρέχουσας σελίδας
page_url <- paste0("https://www.car.gr/classifieds/cars/?category=15001&offer_type=sale&pg=", i)
# Λήψη της σελίδας
main_page <- read_html(page_url)
# Απόσπαση όλων των συνδέσμων που οδηγούν σε αγγελίες αυτοκινήτων
urls <- main_page %>%
html_nodes("a[href^='/classifieds/cars/view/']") %>%
html_attr("href") %>%
unique() %>%
paste0("https://www.car.gr", .)  # Δημιουργία πλήρους URL
# Προσθήκη των URLs στη λίστα
all_urls <- c(all_urls, urls)
}
# Αρχικοποίηση κενής λίστας για την αποθήκευση όλων των URLs
all_urls <- c()
# Ο αριθμός των σελίδων που θέλεις να ελέγξεις
num_pages <- 2  # Αντικατάστησέ το με τον πραγματικό αριθμό των σελίδων
# Επαναληπτική διαδικασία για να περάσεις από όλες τις σελίδες
for (i in 1:num_pages) {
# Δημιουργία του URL της τρέχουσας σελίδας
page_url <- paste0("https://www.car.gr/classifieds/cars/?category=15001&offer_type=sale&pg=", i)
# Λήψη της σελίδας
main_page <- read_html(page_url)
# Απόσπαση όλων των συνδέσμων που οδηγούν σε αγγελίες αυτοκινήτων
urls <- main_page %>%
html_nodes("a[href^='/classifieds/cars/view/']") %>%
html_attr("href") %>%
unique() %>%
paste0("https://www.car.gr", .)  # Δημιουργία πλήρους URL
# Προσθήκη των URLs στη λίστα
all_urls <- c(all_urls, urls)
}
# Λήψη της κύριας σελίδας με τις αγγελίες
main_page <- read_html("https://www.car.gr/classifieds/cars/?category=15001&offer_type=sale")
# Δημιουργία ενός κενού dataframe για την αποθήκευση των δεδομένων
data <- data.frame(χιλιόμετρα = integer(),
καύσιμο = character(),
μάρκα = character(),
stringsAsFactors = FALSE)
# Διευθύνσεις των σελίδων που θες να ελέγξεις
urls <- c("https://www.car.gr/classifieds/cars/view/337799572-renault-captur?from-promotion=1","https://www.car.gr/classifieds/cars/view/344321776-citroen-c3")
# Αναζήτηση δεδομένων σε κάθε URL
for (url in urls) {
# Λήψη του HTML κώδικα της σελίδας
page <- read_html(url)
# Απόσπαση των τιμών χιλιομέτρων, καυσίμου και μάρκας
mileage <- page %>% html_nodes(xpath = "//script[contains(., 'mileageFromOdometer')]") %>%
html_text() %>%
gsub(".*\"mileageFromOdometer\":\\{\"@type\":\"QuantitativeValue\",\"value\":(\\d+),\"unitText\":\"km\"\\}.*", "\\1", .) %>%
.[1]  # Επιλογή της πρώτης ένδειξης
fuel <- page %>% html_nodes(xpath = "//script[contains(., 'fuelType')]") %>%
html_text() %>%
gsub(".*\"fuelType\":\"([^\"]+)\".*", "\\1", .) %>%
.[1]  # Επιλογή της πρώτης ένδειξης
manufacturer <- page %>% html_nodes(xpath = "//script[contains(., 'manufacturer')]") %>%
html_text() %>%
gsub(".*\"manufacturer\":\"([^\"]+)\".*", "\\1", .) %>%
.[1]  # Επιλογή της πρώτης ένδειξης
# Προσθήκη των δεδομένων στο dataframe
data <- rbind(data, data.frame(χιλιόμετρα = as.integer(mileage),
καύσιμο = fuel,
μάρκα = manufacturer,
stringsAsFactors = FALSE))
}
# Αρχικοποίηση κενής λίστας για την αποθήκευση όλων των URLs
all_urls <- c()
# Ο αριθμός των σελίδων που θέλεις να ελέγξεις
num_pages <- 4507  # Αντικατάστησέ το με τον πραγματικό αριθμό των σελίδων
# Επαναληπτική διαδικασία για να περάσεις από όλες τις σελίδες
for (i in 1:num_pages) {
# Δημιουργία του URL της τρέχουσας σελίδας
page_url <- paste0("https://www.car.gr/classifieds/cars/?category=15001&offer_type=sale&pg=", i)
# Λήψη της σελίδας
main_page <- read_html(page_url)
# Απόσπαση όλων των συνδέσμων που οδηγούν σε αγγελίες αυτοκινήτων
urls <- main_page %>%
html_nodes("a[href^='/classifieds/cars/view/']") %>%
html_attr("href") %>%
unique() %>%
paste0("https://www.car.gr", .)  # Δημιουργία πλήρους URL
# Προσθήκη των URLs στη λίστα
all_urls <- c(all_urls, urls)
}
# Αρχικοποίηση κενής λίστας για την αποθήκευση όλων των URLs
all_urls <- c()
# Ο αριθμός των σελίδων που θέλεις να ελέγξεις
num_pages <- 4507  # Αντικατάστησέ το με τον πραγματικό αριθμό των σελίδων
# Επαναληπτική διαδικασία για να περάσεις από όλες τις σελίδες
for (i in 1:num_pages) {
# Δημιουργία του URL της τρέχουσας σελίδας
page_url <- paste0("https://www.car.gr/classifieds/cars/?category=15001&offer_type=sale&pg=", i)
# Λήψη της σελίδας
main_page <- read_html(page_url)
# Απόσπαση όλων των συνδέσμων που οδηγούν σε αγγελίες αυτοκινήτων
urls <- main_page %>%
html_nodes("a[href^='/classifieds/cars/view/']") %>%
html_attr("href") %>%
unique() %>%
paste0("https://www.car.gr", .)  # Δημιουργία πλήρους URL
# Προσθήκη των URLs στη λίστα
all_urls <- c(all_urls, urls)
}
library(rvest)
library(httr)
library(readr)
# Αρχικοποίηση κενής λίστας για την αποθήκευση όλων των URLs
all_urls <- c()
# Ο αριθμός των σελίδων που θέλεις να ελέγξεις
num_pages <- 5  # Αντικατάστησέ το με τον πραγματικό αριθμό των σελίδων
# Ρύθμιση proxy server (εάν χρησιμοποιείς)
proxy <- use_proxy("http://9054e84a7c56a3d2016165b3e209e201e597970e:@proxy.zenrows.com:8001")
# Επαναληπτική διαδικασία για να περάσεις από όλες τις σελίδες
for (i in 1:num_pages) {
# Δημιουργία του URL της τρέχουσας σελίδας
page_url <- paste0("https://www.car.gr/classifieds/cars/?category=15001&offer_type=sale&pg=", i)
# Λήψη της σελίδας με User-Agent και Proxy
main_page <- GET(page_url, proxy, add_headers('User-Agent' = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36')) %>%
content("text") %>%
read_html()
# Απόσπαση όλων των συνδέσμων που οδηγούν σε αγγελίες αυτοκινήτων
urls <- main_page %>%
html_nodes("a[href^='/classifieds/cars/view/']") %>%
html_attr("href") %>%
unique() %>%
paste0("https://www.car.gr", .)  # Δημιουργία πλήρους URL
# Προσθήκη των URLs στη λίστα
all_urls <- c(all_urls, urls)
Sys.sleep(2)  # Καθυστέρηση 2 δευτερολέπτων μεταξύ των αιτήσεων
}
library(rvest)
library(httr)
library(readr)
# Αρχικοποίηση κενής λίστας για την αποθήκευση όλων των URLs
all_urls <- c()
# Ο αριθμός των σελίδων που θέλεις να ελέγξεις
num_pages <- 5  # Αντικατάστησέ το με τον πραγματικό αριθμό των σελίδων
# Ρύθμιση proxy server (εάν χρησιμοποιείς)
proxy <- use_proxy("webUnblock:k05ta5_webUnbl0ck@unblock.oxylabs.io:60000", username = "webUnblock", password = "k05ta5_webUnbl0ck")
# Επαναληπτική διαδικασία για να περάσεις από όλες τις σελίδες
for (i in 1:num_pages) {
# Δημιουργία του URL της τρέχουσας σελίδας
page_url <- paste0("https://www.car.gr/classifieds/cars/?category=15001&offer_type=sale&pg=", i)
# Λήψη της σελίδας με User-Agent και Proxy
main_page <- GET(page_url, proxy, add_headers('User-Agent' = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36')) %>%
content("text") %>%
read_html()
# Απόσπαση όλων των συνδέσμων που οδηγούν σε αγγελίες αυτοκινήτων
urls <- main_page %>%
html_nodes("a[href^='/classifieds/cars/view/']") %>%
html_attr("href") %>%
unique() %>%
paste0("https://www.car.gr", .)  # Δημιουργία πλήρους URL
# Προσθήκη των URLs στη λίστα
all_urls <- c(all_urls, urls)
Sys.sleep(2)  # Καθυστέρηση 2 δευτερολέπτων μεταξύ των αιτήσεων
}
library(rvest)
library(httr)
library(readr)
# Αρχικοποίηση κενής λίστας για την αποθήκευση όλων των URLs
all_urls <- c()
# Ο αριθμός των σελίδων που θέλεις να ελέγξεις
num_pages <- 5  # Αντικατάστησέ το με τον πραγματικό αριθμό των σελίδων
# Ρύθμιση proxy server
proxy_url <- "http://9054e84a7c56a3d2016165b3e209e201e597970e:@proxy.zenrows.com:8001"
# Επαναληπτική διαδικασία για να περάσεις από όλες τις σελίδες
for (i in 1:num_pages) {
# Δημιουργία του URL της τρέχουσας σελίδας
page_url <- paste0("https://www.car.gr/classifieds/cars/?category=15001&offer_type=sale&pg=", i)
# Λήψη της σελίδας με User-Agent και Proxy
main_page <- GET(
page_url,
use_proxy(url = proxy_url),
add_headers('User-Agent' = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36')
) %>%
content("text") %>%
read_html()
# Απόσπαση όλων των συνδέσμων που οδηγούν σε αγγελίες αυτοκινήτων
urls <- main_page %>%
html_nodes("a[href^='/classifieds/cars/view/']") %>%
html_attr("href") %>%
unique() %>%
paste0("https://www.car.gr", .)  # Δημιουργία πλήρους URL
# Προσθήκη των URLs στη λίστα
all_urls <- c(all_urls, urls)
Sys.sleep(2)  # Καθυστέρηση 2 δευτερολέπτων μεταξύ των αιτήσεων
}
